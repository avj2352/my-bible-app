{"version":3,"sources":["assets/img/broke.png","common/context/AppContext.tsx","layouts/dashboard/router/DashboardRouterContext.tsx","common/theme/ThemeConfigProvider.tsx","common/async/AsyncCalls.ts","components/sidebar/sidebar-style.ts","components/sidebar/Sidebar.tsx","components/header/header-style.ts","components/header/Header.tsx","components/menu-drop-down/MenuDropdown.tsx","components/footer/footer-style.ts","components/footer/Footer.tsx","layouts/dashboard/dashboard-style.ts","views/home/loading/skeleton.style.ts","views/home/loading/Skeleton.tsx","views/home/home.style.ts","views/home/general/home.general.style.ts","views/home/cards/SimpleCardOverview.tsx","views/home/general/HomeGeneral.view.tsx","views/home/profile/home.profile.style.ts","views/home/profile/HomeProfile.view.tsx","views/home/Home.view.tsx","views/groups/group.view.style.ts","components/notifications/notification.style.ts","components/notifications/CloseActionButton.tsx","components/loaders/linear-loader/LinearLoader.tsx","views/groups/create/GroupCreate.tsx","views/groups/loading/GroupListSkeleton.tsx","components/badges/disabled/DisabledBadge.tsx","views/groups/card/GroupCard.tsx","components/card/404/EmptySearchCard.tsx","views/groups/update/GroupUpdateModal.tsx","components/search/SearchCard.tsx","views/groups/Group.view.tsx","views/tags/tag.view.style.ts","views/tags/create/TagCreate.tsx","views/tags/loading/TagListSkeleton.tsx","components/badges/simple/SimpleBadge.tsx","views/tags/card/TagCard.tsx","views/tags/update/TagUpdateModal.tsx","views/tags/Tag.view.tsx","views/items/item.view.style.ts","common/util/HelperFunctions.ts","components/editor/ClassicEditor.tsx","views/items/create/ItemCreate.tsx","views/items/loading/ItemListSkeleton.tsx","components/badges/item-badge/ItemBadgeModal.tsx","views/items/card/ItemCard.tsx","views/items/update/ItemUpdateModal.tsx","views/items/Item.view.tsx","views/recipes/components/form/recipe-form.style.ts","views/recipes/components/form/RecipeForm.tsx","views/recipes/loading/RecipeFormSkeleton.tsx","views/recipes/add/RecipeAdd.view.tsx","views/recipes/loading/RecipeListSkeleton.tsx","views/recipes/list/recipe-list.view.styles.ts","components/badges/simple/SmallBadge.tsx","views/recipes/card/SimpleRecipeCard.tsx","views/recipes/list/panels/RecipePanel.tsx","views/recipes/components/collection/RecipeCollection.tsx","views/recipes/list/RecipeList.view.tsx","views/recipes/edit/RecipeUpdate.view.tsx","views/recipes/search/recipe-search.styles.ts","views/recipes/search/RecipeSearch.view.tsx","views/recipes/profile/my-recipe.view.styles.ts","views/recipes/card/MyRecipeCard.tsx","views/recipes/profile/MyRecipe.view.tsx","views/recipes/card/recipe-detail-card.styles.ts","components/buttons/share/ShareButton.tsx","components/badges/media/YoutubeBadge.tsx","components/accordians/RecipeAccordian.tsx","views/recipes/card/RecipeDetailCard.tsx","views/recipes/detail/RecipeDetail.view.tsx","layouts/dashboard/router/DashboardRouter.tsx","layouts/dashboard/DashboardLayout.tsx","views/about/about.style.ts","components/buttons/links/SimpleLinkButton.tsx","views/about/About.view.tsx","views/login/login.style.ts","views/login/Login.view.tsx","router/RouterApp.tsx","app/App.tsx","serviceWorker.ts","index.tsx","assets/img/logo.png"],"names":["module","exports","CONTEXT_ACTION_TYPE","DASHBOARD_ROUTES","initialState","profile","undefined","theme","version","title","AppStateContext","createContext","AppDispatchContext","appContextReducer","state","action","type","payload","SET_PROFILE_DATA","THEME_TOGGLE","SET_VERSION","Error","AppContextProvider","children","useReducer","dispatch","Fragment","Provider","value","useGlobalState","useContext","useGlobalDispatch","useThemeOptions","appContext","createMuiTheme","palette","typography","fontFamily","join","fontSize","h5","fontWeight","letterSpacing","shape","borderRadius","props","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiButton","label","textTransform","contained","boxShadow","MuiTabs","root","marginLeft","spacing","indicator","height","borderTopLeftRadius","borderTopRightRadius","backgroundColor","common","white","margin","minWidth","padding","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","primary","fontWeightMedium","MuiListItemIcon","color","marginRight","MuiAvatar","width","MuiInputBase","input","searchByText","data","a","table","query","axios","get","getUserDetails","logoutUser","addGroupDetails","post","getAllGroups","updateGroupById","id","put","deleteGroupById","delete","addTagDetails","getAllTags","updateTagById","deleteTagById","addNewItem","getAllItems","updateItemById","deleteItemById","getAllRecipes","getAllPublicRecipes","getAllRecipesByUserId","getAllRecipesByGroupId","getRecipeById","addNewRecipe","updateRecipeById","deleteRecipeById","useStyles","makeStyles","fullList","drawer","flexShrink","drawerPaper","drawerHeader","display","dark","alignItems","justifyContent","avatar","transition","opacity","position","top","left","shadows","listGroup","listDivider","Sidebar","open","handleDrawerClose","imageRef","React","createRef","history","useHistory","skeletonLoading","ListItem","variant","useState","setGeneralListContent","signedInListContent","setSignedInListContent","adminListContent","setAdminListContent","classes","fetchGroups","useCallback","then","res","listContent","map","item","index","button","onClick","navigateLink","bind","_id","key","ListItemIcon","ListItemText","paramName","location","pathname","push","useEffect","role","Divider","className","Drawer","anchor","paper","Avatar","ref","alt","src","appLogo","onLoad","current","style","IconButton","List","appBar","flexGrow","transitions","create","easing","sharp","duration","leavingScreen","search","fade","down","searchIcon","pointerEvents","inputRoot","inputInput","appBarShift","easeOut","enteringScreen","menuButton","sideButton","right","justifySelf","sideButton02","hide","Header","handleDrawerOpen","AppBar","clsx","Toolbar","disableGutters","edge","aria-label","Typography","noWrap","MenuDropdown","event","menuOptions","setMenuOptions","handleLogout","displayUserInfo","info","console","log","handleLogin","routeToAbout","notSignedInOptions","anchorEl","setAnchorEl","Boolean","signedInOptions","name","currentTarget","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","el","MenuItem","bottom","text","paddingBottom","list","marginBottom","subheader","background","grow","dashboardButton","fabButton","zIndex","notificationButton","Footer","appDispatch","useSnackbar","enqueueSnackbar","closeSnackbar","firstName","lastName","setTheme","Fab","evt","flexDirection","content","paddingTop","contentShift","marginTop","row","flexWrap","column","debug","border","container","box","smallBox","between","HomeSkeletonLoading","Grid","xs","md","Box","animation","heading","textAlign","transform","maxWidth","boxTop","group","footerText","contextDefaultState","WELCOME","DashboardRouterStateContext","DashboardRouterDispatchContext","useDashboardRouterContextReducer","ABOUT","LOGIN","LIST","RECIPES","GROUPS","TAGS","ITEMS","NEW_RECIPES","UPDATE_RECIPES","LIST_RECIPES","MY_RECIPES","SEARCH_RECIPES","PREVIEW_RECIPE","DashboardRouterContextProvider","useDashboardRouteDispatch","SimpleCardOverview","dashboardRouteDispatch","link","btnLabel","params","handleNavigation","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","Button","size","HomeGeneralView","lg","HomeProfileView","isAdmin","groupContent","setGroupContent","HomeView","setHeading","setContent","setTimeout","card","cardContent","alignSelf","tabContent","secondary","cardText","main","CloseActionButton","keyObj","createStyles","LinearLoader","LinearProgress","checkBoxContent","checkBoxText","bullet","pos","validationText","GroupCreate","onCreateGroup","groupTitle","setGroupTitle","groupSlug","setGroupSlug","groupDescription","setGroupDescription","isChecked","setCheckBox","isLoading","setLoading","errMsg","setErrMsg","resetAllFields","handleChange","target","toLowerCase","TextField","required","autoFocus","onChange","fullWidth","Checkbox","checked","inputProps","trim","slug","description","premium","catch","err","finally","disabled","chip","fab","GroupListSkeleton","DisabledBadge","Chip","smallText","GroupCard","onDelete","onEdit","media","EmptySearchCard","getContent","CardMedia","image","noResultsImg","GroupUpdateModal","isOpen","setChecked","handleClose","onModalClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","defaultValue","onBlur","DialogActions","SearchCard","onSearch","onReset","groupQuery","setGroupQuery","isDisabled","toggleDisabled","isPartial","togglePartial","buttonRef","prev","GroupView","defaultGroupContent","groupListContent","setGroupListContent","isModal","setModal","groupModalData","setGroupModalData","fetchAllGroups","length","handleGroupEdit","handleGroupDelete","okActionButton","CssBaseline","status","TagCreate","onCreateTag","tagTitle","setTagTitle","tagDescription","setTagDescription","TagListSkeleton","useStylesBootstrap","arrow","black","SimpleBadge","toggleOpen","Tooltip","disableFocusListener","disableHoverListener","disableTouchListener","placement","substring","toUpperCase","clickable","TagCard","TagUpdateModal","groupName","setTagName","TagView","defaultTagContentList","tagListContent","setTagListContent","tagModalData","setTagModalData","fetchAllTags","handleTagEdit","handleTagDelete","getSubText","count","len","result","substr","ClassicEditor","placeholder","onEditorChange","html","editor","getData","replace","removeHtmlTags","replaceAmpersand","removeSpecialCharacters","removeNewLines","editorContainer","ItemCreate","onCreateItem","itemData","setItemData","ItemListSkeleton","ItemBadgeModal","toolTipClasses","useRef","document","createElement","toggleModal","dangerouslySetInnerHTML","__html","ItemCard","ItemUpdateModal","ItemView","getDefaultListContent","itemListContent","setItemListContent","itemModalData","setItemModalData","handleItemEdit","handleItemDelete","fetchAllItems","pxToRem","flexBasis","autocomplete","secondaryHeading","formControl","selectEmpty","RecipeForm","onSubmit","groupDropdownList","tagDropdownList","itemDropdownList","tagsData","tags","itemsData","items","htmlData","expanded","setExpanded","recipeTitle","setRecipeTitle","editorData","setEditorData","recipeLink","setRecipeLink","selectedGroup","setSelectedGroup","populateList","selectedTags","setSelectedTags","selectedItems","setSelectedItems","privateValue","setPrivateValue","propList","optionsList","filter","some","panel","test","Autocomplete","newInputValue","options","getOptionLabel","option","filterSelectedOptions","renderInput","Accordion","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","multiple","isPrivate","timers","RecipeFormSkeleton","RecipeAddView","dashboardRouterDispatch","setTitle","formContent","setFormContent","fetchAllDropdowns","promiseList","Promise","all","handleFormSubmit","RecipeListSkeleton","SmallBadge","SimpleRecipeCard","onView","createdBy","tagContent","RecipePanel","onPanelChange","ButtonGroup","paddingRight","boldTitle","listReducer","temp","letter","charAt","mapChronologicalList","reduce","sort","b","localeCompare","RecipeCollection","recipe","index01","RecipeListView","useParams","dispatchDashboard","defaultCardContent","recipeListContent","setRecipeListContent","panelState","setPanelState","recipeList","setRecipeList","handleView","fetchRecipesOfType","asyncFetch","sortedList","date1","Date","created","getTime","panelNumber","RecipeUpdateView","dashboardDispatch","getDefaultData","fetchAllData","recipeId","rowCenter","RecipeSearchView","getInitialContent","rowSeparate","MyRecipeCard","groupBadge","privacyBadge","MyRecipeListView","filterByUserProfile","userProfile","fetchRecipes","asyncFetchCall","handleRecipeItemEdit","handleRecipeItemDelete","rowItems","htmlContent","flex","iconButton","divider","highlight","ShareButton","copyText","setCopyText","paragraph","Paper","InputBase","orientation","navigator","clipboard","writeText","YoutubeBadge","icon","window","RecipeAccordian","date","author","itemsContent","itemDiv","currDate","getDate","getMonth","getFullYear","parseDateString","RecipeDetailCard","groupCard","youtubeButton","href","RecipeDetailView","fetchRecipeDetails","DashboardRouterApp","strict","path","DashboardLayout","setOpen","fetchUserDetails","DashboardRouter","imageIcon","overflow","socialBtn","fontIcon","contentWrapper","footer","textDecoration","SimpleLinkButton","align","to","gsap","registerPlugin","CSSPlugin","AboutView","aboutRef","loginBoxDom","animateIn","t1","TimelineLite","ease","Back","config","play","focus","logo","rel","LoginView","submitRef","authenticate","preventDefault","onKeyDown","RouterApp","render","from","App","maxSnack","anchorOrigin","vertical","horizontal","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f51577c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/broke.a8fc048e.png\";","import React, { FunctionComponent, createContext, useReducer, useContext } from 'react';\n\nexport interface IAppContextState {\n    profile: any;\n    theme: 'light' | 'dark';\n    version: string;\n    title: string;\n}\n\nexport enum CONTEXT_ACTION_TYPE {\n    THEME_TOGGLE,\n    SET_VERSION,\n    SET_PROFILE_DATA\n}\n\nexport const initialState: IAppContextState = {\n    profile: undefined,\n    theme: 'light',\n    version: '0.1',\n    title: 'My Bible App'\n};\n\nexport const AppStateContext = createContext<IAppContextState>(initialState); // Separate context for storing state\nexport const AppDispatchContext = createContext({}); // Separate context for updating state\n\nconst appContextReducer = (state: IAppContextState, action: {type: CONTEXT_ACTION_TYPE, payload: any}): any => {\n    const { type, payload } = action;\n    switch (type) {\n        case CONTEXT_ACTION_TYPE.SET_PROFILE_DATA:\n            return { ...state, profile: payload };\n        case CONTEXT_ACTION_TYPE.THEME_TOGGLE:            \n            if (payload) return {...state, theme: 'dark'};\n            else return {...state, theme: 'light'};\n        case CONTEXT_ACTION_TYPE.SET_VERSION:\n            return { ...state, version: payload};\n        default:\n            throw new Error(`Unhandled action type: ${type}`);\n    }\n};\n\nexport const AppContextProvider: FunctionComponent<any> = ({children}): JSX.Element => {\n    const [state, dispatch] = useReducer(appContextReducer, initialState);\n    return (<React.Fragment>\n            <AppStateContext.Provider value={state}>\n                <AppDispatchContext.Provider value={dispatch}>\n                    {children}\n            </AppDispatchContext.Provider>\n            </AppStateContext.Provider>\n        </React.Fragment>);\n};\n\n// Custom Hooks\nexport const useGlobalState  = () => useContext(AppStateContext);\nexport const useGlobalDispatch =  () => useContext(AppDispatchContext);","/**\n * PAJ - Creating a Global Shared State using Context API\n * state defined in this AppProvider will be used throughout the context of our application\n */\nimport React, {FunctionComponent, useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {AppDispatchContext, AppStateContext} from \"../../../common/context/AppContext\";\n\nexport type IDashboardRouterContextState = {\n    name: DASHBOARD_ROUTES,\n    history: any[],\n};\n\nexport enum DASHBOARD_ROUTES {\n    WELCOME = '',\n    ABOUT = 'about',\n    LOGIN = 'login',\n    LIST = 'list',\n    RECIPES = 'recipes',\n    NEW_RECIPES = 'newRecipes',\n    UPDATE_RECIPES = 'updateRecipes',\n    LIST_RECIPES = 'listRecipes',\n    MY_RECIPES = 'myRecipes',\n    PREVIEW_RECIPE = 'previewRecipe',\n    SEARCH_RECIPES = 'searchRecipes',\n    GROUPS = 'groups',\n    TAGS = 'tags',\n    ITEMS = 'items'\n};\n\nconst contextDefaultState: IDashboardRouterContextState = {\n    name: DASHBOARD_ROUTES.WELCOME,\n    history: [],\n}\n\nexport const DashboardRouterStateContext = React.createContext<IDashboardRouterContextState>(contextDefaultState); // Separate context for storing state\n\nexport const DashboardRouterDispatchContext = React.createContext({}); // Separate context for updating state\n\nconst useDashboardRouterContextReducer = (state: IDashboardRouterContextState, action: {type: DASHBOARD_ROUTES, payload?: any}): any => {\n    const {history} = state;\n    let location: { pathname: string; };\n\n    switch (action.type) {\n        case DASHBOARD_ROUTES.WELCOME:\n            // console.log(`Dispatch Route: ${DASHBOARD_ROUTES.WELCOME}`);\n            location = {\n                pathname: `/app`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.WELCOME};\n\n        case DASHBOARD_ROUTES.ABOUT:\n            location = {\n                pathname: `/about`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.ABOUT};\n\n        case DASHBOARD_ROUTES.LOGIN:\n            location = {\n                pathname: `/login`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.LOGIN};\n\n        case DASHBOARD_ROUTES.LIST:\n            // console.log(`Dispatch Route: ${DASHBOARD_ROUTES.LIST}`);\n            location = {\n                pathname: `/app/${DASHBOARD_ROUTES.LIST}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.LIST};\n\n        case DASHBOARD_ROUTES.RECIPES:\n            // console.log(`Dispatch Route: ${DASHBOARD_ROUTES.RECIPES}`);\n            location = {\n                pathname: `/app/${DASHBOARD_ROUTES.RECIPES}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.RECIPES};\n\n        case DASHBOARD_ROUTES.GROUPS:\n            // console.log(`Dispatch Route: ${DASHBOARD_ROUTES.GROUPS}`);\n            location = {\n                pathname: `/app/${DASHBOARD_ROUTES.GROUPS}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.GROUPS};\n\n        case DASHBOARD_ROUTES.TAGS:\n            // console.log(`Dispatch Route: ${DASHBOARD_ROUTES.TAGS}`);\n            location = {\n                pathname: `/app/${DASHBOARD_ROUTES.TAGS}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.TAGS};\n\n        case DASHBOARD_ROUTES.ITEMS:\n            // console.log(`Dispatch Route: ${DASHBOARD_ROUTES.ITEMS}`);\n            location = {\n                pathname: `/app/${DASHBOARD_ROUTES.ITEMS}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.ITEMS};\n\n        case DASHBOARD_ROUTES.NEW_RECIPES:\n            location = {\n                pathname: `/app/recipes/add`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.NEW_RECIPES};\n\n        case DASHBOARD_ROUTES.UPDATE_RECIPES:\n            location = {\n                pathname: `/app/recipes/update/${action.payload}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.UPDATE_RECIPES};\n\n        case DASHBOARD_ROUTES.LIST_RECIPES:\n            console.log('Routing to List Recipes: ', action.payload);\n            location = {\n                pathname: `/app/recipes/list/${action.payload}`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.LIST_RECIPES};\n\n        case DASHBOARD_ROUTES.MY_RECIPES:\n            console.log('Routing to List Recipes: ', action.payload);\n            location = {\n                pathname: `/app/recipes/profile`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.MY_RECIPES};\n\n        case DASHBOARD_ROUTES.SEARCH_RECIPES:\n            location = {\n                pathname: `/app/recipes/search`\n            };\n            history.push(location);\n            return {...state, name: DASHBOARD_ROUTES.SEARCH_RECIPES};\n\n        case DASHBOARD_ROUTES.PREVIEW_RECIPE:\n            location = {\n                pathname: `/app/recipes/detail/${action.payload}`\n            };\n            history.push(location);\n            return  {...state, name: DASHBOARD_ROUTES.PREVIEW_RECIPE};\n\n        default:\n            throw new Error(`Sorry...Unknown Dashboard Route Name: ${action.type}`);\n    }\n};\n\nexport const DashboardRouterContextProvider: FunctionComponent<any> = ({children}) => {\n    const history = useHistory();\n\n    const [state, dispatch] = React.useReducer( useDashboardRouterContextReducer, {\n        name: DASHBOARD_ROUTES.WELCOME,\n        history: history,\n    });\n    return (\n        <DashboardRouterStateContext.Provider value={state}>\n            <DashboardRouterDispatchContext.Provider value={dispatch}>\n                {children}\n            </DashboardRouterDispatchContext.Provider>\n        </DashboardRouterStateContext.Provider>\n    );\n};\n\n// Custom Hooks\nexport const useDashboardRouteState  = () => useContext(DashboardRouterStateContext);\nexport const useDashboardRouteDispatch =  () => useContext(DashboardRouterDispatchContext);\n","import {createMuiTheme, ThemeOptions} from '@material-ui/core/styles';\nimport { useGlobalState } from '../context/AppContext';\n\nexport const useThemeOptions = () : ThemeOptions => {\n    const appContext = useGlobalState();\n    // default material theme configuration\n\n    let theme = createMuiTheme({\n        palette: {\n            type: appContext.theme,\n            \"common\": {\n                \"black\": \"#000\",\n                \"white\": \"#fff\"\n            },\n            \"secondary\": {\n                \"light\": \"rgba(240, 52, 122, 1)\",\n                \"main\": \"rgba(184, 15, 79, 1)\",\n                \"dark\": \"rgba(133, 11, 57, 1)\",\n                \"contrastText\": \"#fff\"\n            },\n            \"primary\": {\n                \"light\": \"rgb(142,202,230)\",\n                \"main\": \"rgb(33,158,188)\",\n                \"dark\": \"rgba(21, 101, 121)\",\n                \"contrastText\": \"#fff\"\n            },\n            \"error\": {\n                \"light\": \"rgba(255, 64, 64, 1)\",\n                \"main\": \"rgba(217, 54, 54, 1)\",\n                \"dark\": \"rgba(128, 44, 67, 1)\",\n                \"contrastText\": \"#fff\"\n            },\n        },\n        typography: {\n            fontFamily: ['\"Montserrat\"' , 'sans-serif'].join(','),\n            fontSize: 16,\n            h5: {\n                fontWeight: 500,\n                fontSize: 26,\n                letterSpacing: 0.5,\n            },\n        },\n        shape: {\n            borderRadius: 8,\n        },\n        props: {\n            MuiTab: {\n                disableRipple: true,\n            },\n        },\n        mixins: {\n            toolbar: {\n                minHeight: 48,\n            },\n        },\n    });\n\n    // Overrides, specific to application - Paperbase\n\n    theme = {\n        ...theme,\n        overrides: {\n            MuiButton: {\n                label: {\n                    textTransform: 'none'\n                },\n                contained: {\n                    boxShadow: 'none',\n                    '&:active': {\n                        boxShadow: 'none'\n                    }\n                }\n            },\n            MuiTabs: {\n                root: {\n                    marginLeft: theme.spacing(1)\n                },\n                indicator: {\n                    height: 3,\n                    borderTopLeftRadius: 3,\n                    borderTopRightRadius: 3,\n                    backgroundColor: theme.palette.common.white\n                }\n            },\n            MuiTab: {\n                root: {\n                    textTransform: 'none',\n                    margin: '0 16px',\n                    minWidth: 0,\n                    padding: 0,\n                    [\n                        theme\n                            .breakpoints\n                            .up('md')\n                        ]: {\n                        padding: 0,\n                        minWidth: 0\n                    }\n                }\n            },\n            MuiIconButton: {\n                root: {\n                    padding: theme.spacing(1)\n                }\n            },\n            MuiTooltip: {\n                tooltip: {\n                    borderRadius: 4\n                }\n            },\n            MuiDivider: {\n                root: {\n                    backgroundColor: '#404854'\n                }\n            },\n            MuiListItemText: {\n                primary: {\n                    fontWeight: theme.typography.fontWeightMedium\n                }\n            },\n            MuiListItemIcon: {\n                root: {\n                    color: 'inherit',\n                    marginRight: 0,\n                    '& svg': {\n                        fontSize: 20\n                    }\n                }\n            },\n            MuiAvatar: {\n                root: {\n                    width: 32,\n                    height: 32\n                }\n            },\n            MuiInputBase: {\n                input: {\n                    height: 20,\n                }\n            }\n        }\n    };\n    return theme;\n};","import axios from 'axios';\nimport {ISearch} from \"../../components/search/search-interface\";\n\n// COMMON API =====================================\n/**\n * Search tables by Text - partial | full\n * @param data ISearch\n */\n\nexport const searchByText = async(data: ISearch) => {\n    const { table, type, query } = data;\n    return axios.get(`/${table}/search/text?type=${type}&text=${query}`);\n};\n\n\n// AUTHENTICATION =====================================\n/**\n * AUTH - Login request for user\n */\nexport const authenticateUser = async () => {\n    return axios.get('/auth/google');\n};\n\nexport const getUserDetails = async () => {\n  return axios.get('/auth/userDetails');\n};\n\nexport const logoutUser = async () => {\n    return axios.get('/auth/logout');\n};\n\n// GROUPS RELATED =====================================\n\n/**\n * Add a New Group\n * @param payload\n */\nexport const addGroupDetails = async (payload: any) => {\n  return axios.post('/groups', payload);\n};\n\n/**\n * Get a list of all Groups\n */\nexport const getAllGroups = async () => {\n    return axios.get('/groups');\n};\n\n/**\n * Get a list of all Filtered (w/o premium) Groups\n */\nexport const getAllFilteredGroups = async () => {\n    return axios.get('/groups?q=filtered');\n};\n\n/**\n * Get group details by Id\n * @param id\n */\nexport const getGroupDetailsById = async (id: string) => {\n    return axios.get(`/groups/${id}`);\n};\n\n/**\n * Update record by its id\n * @param id\n * @param payload\n */\nexport const updateGroupById = async (id: string, payload: any) => {\n    return axios.put(`/groups/${id}`, payload);\n};\n\n/**\n * Delete a Group by Id\n * @param id\n */\nexport const deleteGroupById = async(id: string) => {\n    return axios.delete(`/groups/${id}`);\n};\n\n// TAGS RELATED =====================================\n\n/**\n * Add a New Record\n * @param payload\n */\nexport const addTagDetails = async (payload: any) => {\n    return axios.post('/tags', payload);\n};\n\n/**\n * Get a list of all records\n */\nexport const getAllTags = async () => {\n    return axios.get('/tags');\n};\n\n/**\n * Get record details by Id\n * @param id\n */\nexport const getTagDetailsById = async (id: string) => {\n    return axios.get(`/tags/${id}`);\n};\n\n/**\n * Update record by its id\n * @param id\n * @param payload\n */\nexport const updateTagById = async (id: string, payload: any) => {\n    return axios.put(`/tags/${id}`, payload);\n};\n\n/**\n * Delete a record by Id\n * @param id\n */\nexport const deleteTagById = async(id: string) => {\n    return axios.delete(`/tags/${id}`);\n};\n\n\n// ITEMS RELATED =========================================\n\n/**\n * Add a New Item\n * @param payload\n */\nexport const addNewItem = async (payload: any) => {\n    return axios.post('/items', payload);\n};\n\n/**\n * Get a list of all records\n */\nexport const getAllItems = async () => {\n    return axios.get('/items');\n};\n\n/**\n * Update record by its id\n * @param id\n * @param payload\n */\nexport const updateItemById = async (id: string, payload: any) => {\n    return axios.put(`/items/${id}`, payload);\n};\n\n/**\n * Delete a record by Id\n * @param id\n */\nexport const deleteItemById = async(id: string) => {\n    return axios.delete(`/items/${id}`);\n};\n\n// RECIPE RELATED =========================================\n\n\n/**\n * Get a list of all records\n */\nexport const getAllRecipes = async () => {\n    return axios.get('/recipes');\n};\n\n\n/**\n * Get a list of all public records\n */\nexport const getAllPublicRecipes = async () => {\n    return axios.get('/publicRecipes');\n};\n\n\n\n/**\n * Get a list of all records\n */\nexport const getAllRecipesByUserId = async () => {\n    return axios.get('/recipes/search/user');\n};\n\n/**\n * Get a list of all records under particular Group\n */\nexport const getAllRecipesByGroupId = async (id: string) => {\n    return axios.get(`/recipes/group/${id}`);\n};\n\n/**\n * Get record details by its Id\n */\nexport const getRecipeById = async (id: string) => {\n    return axios.get(`/recipes/${id}`);\n};\n\n/**\n * Add a New Item\n * @param payload\n */\nexport const addNewRecipe = async (payload: any) => {\n    return axios.post('/recipes', payload);\n};\n\n/**\n * Update record by its id\n * @param id\n * @param payload\n */\nexport const updateRecipeById = async (id: string, payload: any) => {\n    return axios.put(`/recipes/${id}`, payload);\n};\n\n/**\n * delete record details by its Id\n */\nexport const deleteRecipeById = async (id: string) => {\n    return axios.delete(`/recipes/${id}`);\n};","import { makeStyles } from '@material-ui/core/styles';\nimport { pink } from '@material-ui/core/colors';\n\n\nexport const drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    fullList: {\n      width: 250,\n    }, \n    drawer: {\n      width: drawerWidth,      \n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      backgroundColor: theme.palette.primary.dark,\n      alignItems: 'center',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n      justifyContent: 'space-between',\n    },\n    avatar: {\n      transition: 'opacity 0.8s ease',\n      opacity: '0',\n      position: 'absolute',\n      width: '50%',\n      height: '120px',\n      top: '1%',\n      left: '20%',\n      borderRadius: '10px',\n      boxShadow: theme.shadows[3]\n    },\n    listGroup: {\n      position: 'relative',\n      top: '5rem'\n    },\n    listDivider: {\n      \n    }\n}));","/**\n * Sidebar component - Drawer API\n * PAJ - 22 March 2019\n */\nimport React, {useState, useEffect, FunctionComponent, useCallback, useRef} from 'react';\nimport { useHistory } from 'react-router-dom';\n// Material\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport Skeleton from '@material-ui/lab/Skeleton/Skeleton';\n// custom\nimport {IAppContextState, useGlobalState} from \"../../common/context/AppContext\";\nimport { getAllGroups } from '../../common/async/AsyncCalls';\n//Icons\nimport AllIcon from '@material-ui/icons/AcUnit';\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport GroupIcon from '@material-ui/icons/Bookmarks';\nimport ItemsIcon from '@material-ui/icons/PostAdd';\nimport TagsIcon from '@material-ui/icons/LabelImportant';\nimport RecipeIcon from '@material-ui/icons/Fastfood';\nimport DashboardIcon from '@material-ui/icons/AccountBalance';\n//Styles\nimport appLogo from './../../assets/img/logo.png';\nimport { useStyles } from './sidebar-style';\n\n\n\ninterface ISidebarProps {\n  open: boolean;\n  handleDrawerClose: () => void;\n}\n\nconst Sidebar: FunctionComponent<ISidebarProps> = (props): JSX.Element => {\n  // destructuring\n    const { open, handleDrawerClose } = props;\n    const imageRef: any = React.createRef();\n    const appContext: IAppContextState = useGlobalState();\n    // context    \n    const history = useHistory();\n    // skeleton loading\n    const skeletonLoading: JSX.Element = <React.Fragment>\n        <ListItem>\n            <Skeleton variant=\"text\" width={200} height={20}/>\n        </ListItem>\n        <ListItem>\n            <Skeleton variant=\"text\" width={200} height={20}/>\n        </ListItem>\n    </React.Fragment>;\n    // state        \n    const [generalListContent, setGeneralListContent] = useState<JSX.Element>(skeletonLoading);\n    const [signedInListContent, setSignedInListContent] = useState<JSX.Element>(skeletonLoading);\n    const [adminListContent, setAdminListContent] = useState<JSX.Element>(<React.Fragment/>);\n    const classes = useStyles();\n\n    // Lifecycle methods\n    // fetch all groups (premium / non-premium)\n    const fetchGroups = useCallback(()=>{\n      getAllGroups()\n        .then((res: any) => {\n          // console.log('Result is: ', res.data);\n          const listContent: any = res.data && res.data.map((item: any, index: number)=> {\n            return <ListItem button onClick={navigateLink.bind(null, `recipes/list/${item._id}`)} key={index}>\n                <ListItemIcon><TurnedInNotIcon/></ListItemIcon>\n                <ListItemText primary={item.title} />\n              </ListItem>\n          });\n          setGeneralListContent(listContent);\n        });\n    },[]);\n\n    const navigateAbout = () => {\n      const location = {\n        pathname: `/about`,\n      };\n      history.push(location);\n      handleDrawerClose();\n    };\n\n    const navigateLink = (paramName: string) => {\n      const location = {\n        pathname: `/app/${paramName}`,\n      };\n      history.push(location);\n      handleDrawerClose();\n    };\n\n    const handleLoading = () => {\n        if (imageRef.current) imageRef.current.style.opacity = '1';\n    };\n\n    // Dependencies\n    useEffect(()=>{\n        if (appContext.profile) {\n            setSignedInListContent(\n                <React.Fragment>\n                    <ListItem button onClick={navigateLink.bind(null, '')}>\n                        <ListItemIcon><DashboardIcon/></ListItemIcon>\n                        <ListItemText primary='My Dashboard' />\n                    </ListItem>\n                    <ListItem button onClick={navigateLink.bind(null, 'recipes/profile')}>\n                        <ListItemIcon><ImportContactsIcon/></ListItemIcon>\n                        <ListItemText primary='My Recipes' />\n                    </ListItem>\n                    <ListItem button onClick={navigateLink.bind(null, 'tags')}>\n                        <ListItemIcon><TagsIcon/></ListItemIcon>\n                        <ListItemText primary='Add / Edit Tags' />\n                    </ListItem>\n                    <ListItem button onClick={navigateLink.bind(null, 'items')}>\n                        <ListItemIcon><ItemsIcon/></ListItemIcon>\n                        <ListItemText primary='Add / Edit Items' />\n                    </ListItem>\n                    <ListItem button onClick={navigateLink.bind(null, 'recipes/add')}>\n                        <ListItemIcon><RecipeIcon/></ListItemIcon>\n                        <ListItemText primary='Add / Edit Recipes' />\n                    </ListItem>\n                </React.Fragment>\n            );\n        } else {\n            setSignedInListContent(<React.Fragment/>);\n        } if (appContext.profile?.role =='admin') {\n            setAdminListContent (\n                <React.Fragment>\n                    <Divider className={classes.listDivider}/>\n                    <ListItem button onClick={navigateLink.bind(null, 'groups')}>\n                        <ListItemIcon><GroupIcon/></ListItemIcon>\n                        <ListItemText primary='Add / Edit Groups' />\n                    </ListItem>\n                </React.Fragment>\n            );\n        } else {\n            setAdminListContent(<React.Fragment/>);\n        }\n    },[appContext.profile]);\n\n    // componentDidMount\n    useEffect(()=>{\n      fetchGroups();\n    },[]);\n\n    return (\n        <div>          \n          <Drawer\n            className={classes.drawer}\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={open}\n            classes={{paper: classes.drawerPaper}}>\n            <div className={classes.drawerHeader}>\n              <div>&nbsp;</div>\n              <Avatar ref={imageRef} alt=\"app-logo\" src={appLogo} onLoad={handleLoading} className={classes.avatar}/>\n              <IconButton onClick={handleDrawerClose}>\n                {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n            <Divider />\n            <List className={classes.listGroup}>                \n              <ListItem key='about' button onClick={navigateAbout}>\n                <ListItemIcon><DashboardIcon/></ListItemIcon>\n                <ListItemText primary='About' />\n              </ListItem>\n              <Divider className={classes.listDivider}/>\n              {signedInListContent}\n              {adminListContent}\n            </List>       \n          </Drawer>\n        </div>\n    );\n};\n\nexport default Sidebar;","import { fade, makeStyles } from '@material-ui/core/styles';\n\nexport const drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n    },\n    appBar: {\n      // border:'1px solid red',\n      display: 'flex',\n      position: \"fixed\",      \n      width:'100%',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    search: {\n      // border:'1px solid red',\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.down('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: '200px',\n      },\n      [theme.breakpoints.up('md')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '80%',\n      [theme.breakpoints.up('sm')]: {\n        width: '100px',\n      },\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n      \n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 20,\n    },\n    sideButton: {\n      position:'fixed',\n      right:0,\n      marginRight: 0,\n      justifySelf:'flex-end'\n    },\n    sideButton02: {\n      position:'fixed',\n      right:60,\n      marginRight: 0,\n      justifySelf:'flex-end'\n    },\n    hide: {\n      display: 'none',\n    }    \n}));","import React, { FunctionComponent } from 'react';\nimport clsx from 'clsx';\n//Material\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\n// custom\nimport { useGlobalState } from '../../common/context/AppContext';\n//CSS in JS\nimport { useStyles } from './header-style';\n\ninterface IHeaderProps {\n  open: boolean;\n  handleDrawerOpen: ()=>void; \n}\n\nconst Header:FunctionComponent<IHeaderProps> = (props):JSX.Element => {\n    //context\n    const appContext = useGlobalState();\n    const classes = useStyles();\n    const { open, handleDrawerOpen } = props;    \n    \n\n    return(\n        <AppBar          \n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}>\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.hide)}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {`${appContext.title}`}\n            </Typography>            \n          </Toolbar>\n        </AppBar>\n    );\n}\n\n\nexport default Header;","import React, {FunctionComponent, useCallback, useEffect, useState } from 'react';\n// material\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Skeleton from '@material-ui/lab/Skeleton/Skeleton';\n// router\nimport { useHistory } from 'react-router-dom';\nimport { IAppContextState, useGlobalState } from '../../common/context/AppContext';\nimport { logoutUser } from '../../common/async/AsyncCalls';\n\ninterface IMenuOptionProps {\n    label: string | JSX.Element;\n    event: (data: any | null) =>  void;\n};\n\nconst ITEM_HEIGHT = 48;\n\nconst MenuDropdown: FunctionComponent = (props) => {\n    const appContext: IAppContextState = useGlobalState();\n    const history = useHistory();\n    // states\n    const [menuOptions, setMenuOptions] = useState<IMenuOptionProps[]>(\n        [\n            {\n                label: <Skeleton variant=\"text\" width={200} height={20}/>,\n                event: ()=>{}\n            },\n            {\n                label: <Skeleton variant=\"text\" width={200} height={20}/>,\n                event: ()=>{}\n            }\n        ]  \n    );\n\n    // event handlers\n    const handleLogout = (data: any) => {\n        logoutUser()\n            .then(() => {\n                const location = {\n                    pathname: '/login'\n                };\n        \n                history.push(location);\n            });\n    };\n\n    const displayUserInfo = (info: any) => console.log('User info is: ', info);\n    \n    const handleLogin = useCallback((data: any) => {\n\n        const location = {\n            pathname: '/login'\n        };\n\n        history.push(location);\n    },[]);\n\n    const routeToAbout = () => {\n        const location = {\n            pathname: '/about'\n        };\n        history.push(location);\n    };    \n\n    // menu options list\n    const notSignedInOptions: IMenuOptionProps[] = [\n        {\n            label: 'Sign In',\n            event: handleLogin\n        },\n        {\n            label: 'About',\n            event: routeToAbout\n        }    \n    ];\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        if (appContext.profile) {\n            // console.log('Profile Detail is: ', appContext.profile);\n            // menu options list\n            const signedInOptions: IMenuOptionProps[] = [\n                {\n                    label: appContext.profile.name,\n                    event: displayUserInfo.bind(null, appContext.profile)\n                },\n                {\n                    label: `Role: ${appContext.profile.role}`,\n                    event: displayUserInfo.bind(null, appContext.profile)\n                },\n                {\n                    label: 'About',\n                    event: routeToAbout\n                },\n                {\n                    label: 'Logout',\n                    event: handleLogout\n                }\n            ];\n            setMenuOptions (signedInOptions);\n        }else {\n            setMenuOptions (notSignedInOptions);\n        }\n    },[\n        appContext.profile,\n        \n    ]);\n\n    return (\n        <React.Fragment>\n            <IconButton color=\"inherit\" aria-label=\"delete\" onClick={handleClick}>\n                <MoreVertIcon fontSize=\"inherit\" />\n            </IconButton>\n            <Menu\n                id=\"long-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                    style: {\n                        maxHeight: ITEM_HEIGHT * 4.5,\n                        width: '20ch',\n                    },\n                }}\n            >\n                {menuOptions.map((el: IMenuOptionProps, index: number) => (\n                    <MenuItem key={index} onClick={el.event}>\n                        {el.label}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </React.Fragment>\n    );\n};\n\nexport default MenuDropdown;","import { makeStyles } from '@material-ui/core/styles';\nexport const drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    appBar: {\n        // border:'1px solid red',\n        top: 'auto',\n        bottom: 0,\n        display: 'flex',\n        position: \"fixed\",      \n        width:'100%',\n        flexGrow: 1,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n    },    \n    hide: {\n        display: 'none',\n    },\n    text: {\n      padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n      paddingBottom: 50,\n    },\n    list: {\n      marginBottom: theme.spacing(2),\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    dashboardButton: {\n        margin: '0 5px'\n    },\n    fabButton: {\n      position: 'absolute',\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: '0 auto',\n    },\n    notificationButton: {\n      color: 'white'\n    }\n}));","import React, {useEffect, useState, FunctionComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\n// material\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport clxs from 'clsx';\nimport Fab from '@material-ui/core/Fab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ToggleDarkIcon from '@material-ui/icons/NightsStay';\nimport ToggleLightIcon from '@material-ui/icons/WbSunny';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DashboardIcon from '@material-ui/icons/AccountBalance';\n// custom\nimport MenuDropDown from './../menu-drop-down/MenuDropdown';\nimport { useStyles } from './footer-style';\nimport {CONTEXT_ACTION_TYPE, IAppContextState, useGlobalDispatch, useGlobalState} from '../../common/context/AppContext';\nimport clsx from \"clsx\";\n\n\ninterface IFooterProps {\n    open: boolean;\n    handleDrawerOpen: () => void;\n}\n\nconst Footer: FunctionComponent<IFooterProps> = (props): JSX.Element => {\n    const appDispatch: any = useGlobalDispatch();\n    const appContext: IAppContextState = useGlobalState();\n\n    const history = useHistory();\n    const classes = useStyles();\n    const { open, handleDrawerOpen } = props;\n\n    const { enqueueSnackbar, closeSnackbar }  = useSnackbar();\n    const [ userDetails, setUserDetails] = useState({firstName: '', lastName: '', role: ''});\n    const [ theme, setTheme] = useState(appContext.theme);\n\n    // event handlers - toggleTheme\n    const toggleMode = (evt: any) => {\n        if (theme === 'dark') {\n            appDispatch ({\n                type: CONTEXT_ACTION_TYPE.THEME_TOGGLE,\n                payload: false\n            });\n        } else {\n            appDispatch ({\n                type: CONTEXT_ACTION_TYPE.THEME_TOGGLE,\n                payload: true\n            });\n        }        \n    }\n\n    //close sidebar on sidebar buttons click\n    //https://reacttraining.com/react-router/web/api/history\n    const navigateLink = (paramName: string) => {\n        const location = {\n            pathname: `/app/${paramName}`,\n        };\n        history.push(location);        \n    }\n\n    useEffect(()=>{        \n        setTheme(appContext.theme);\n    },[appContext.theme]);\n\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n        })}>\n            <Toolbar>\n                <IconButton \n                    edge=\"start\" \n                    color=\"inherit\" \n                    aria-label=\"open drawer\" \n                    onClick={handleDrawerOpen}\n                    className={clsx(open && classes.hide)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"menu button\"\n                    className={classes.dashboardButton}\n                    onClick={navigateLink.bind(null,'')}>\n                    <DashboardIcon />\n                </IconButton>\n                <Fab \n                    color=\"primary\"\n                    aria-label=\"add\" \n                    className={classes.fabButton}\n                    onClick={() => navigateLink('recipes/search')}>\n                    <SearchIcon />\n                </Fab>\n                <div className={classes.grow} />                \n                {appContext.profile && <IconButton onClick={toggleMode}>\n                    {appContext.theme === 'dark' ? <ToggleLightIcon /> : <ToggleDarkIcon/> }\n                </IconButton>}\n                <MenuDropDown/>                               \n            </Toolbar>\n        </AppBar>\n    );\n};\n\n\n\nexport default Footer;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    display: 'flex',\n    flexDirection:'column',\n    alignItems:'center',\n    justifyContent:'center'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 0',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {    \n    width: '100%',\n    position:'relative',\n    top:'5vh',    \n    display:'flex',\n    justifyContent:'center',    \n    flexGrow: 1,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(4),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),    \n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.spacing(1),\n      width: '100%',      \n    },\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }  \n\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    top: {\n        marginTop: 12\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    debug: {\n        border: '1px solid red'\n    },\n    container: {\n        marginTop: '5%'\n    },\n    box: {\n        padding: 5,\n        borderRadius: '10px',\n        height: 180\n    },\n    smallBox: {\n        padding: 5,\n        width: '80%',\n        borderRadius: '10px',\n        height: 180\n    },\n    item: {\n        padding: 5\n    },\n    [theme.breakpoints.between(\"xs\",\"md\")]: {\n        smallBox: {\n            width: '40%',\n        },\n        container: {\n            marginTop: '5%'\n        }\n    },\n    [theme.breakpoints.up(\"md\")]: {\n        container: {\n            marginTop: '0'\n        }\n    },\n}));","import React, { FunctionComponent } from 'react';\nimport { useStyles } from './skeleton.style';\nimport {Box, Grid} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nexport const HomeSkeletonLoading: FunctionComponent = (props):JSX.Element => {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Grid item xs={12} md={3} className={classes.column}>\n                <Box className={classes.smallBox}>\n                    <Skeleton variant=\"rect\" width={'100%'} height={'100%'} animation=\"wave\"/>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={9}>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n            </Grid>\n            <Grid item xs={12} className={`${classes.column} ${classes.top}`}>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n                <Skeleton variant=\"text\" className={classes.item} width={'100%'} animation=\"wave\"/>\n            </Grid>\n            <Grid item xs={12} className={`${classes.row} ${classes.top}`}>\n                <Grid item xs={12} md={6}>\n                    <Box className={classes.box}>\n                        <Skeleton variant=\"rect\" width={'100%'} height={'100%'} animation=\"wave\"/>\n                    </Box>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Box className={classes.box}>\n                        <Skeleton variant=\"rect\" width={'100%'} height={'100%'} animation=\"wave\"/>\n                    </Box>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: 10,\n        alignItems: 'center',\n        marginTop: '3%'\n    },\n    heading: {\n        // border: '1px solid red',\n        textAlign: 'center'\n    },\n    [theme.breakpoints.between(270,414)]: {\n        container: {\n            width: '92%'\n        },\n        heading: {\n            fontSize: '0.7rem'\n        }\n    },\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    avatar: {\n        position: 'relative',\n        transform: 'translate(0)',\n        transition: 'opacity 0.8s ease',\n        opacity: '0',\n        width: '60%',\n        maxWidth: 200,\n        height: '200px',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[3]\n    },\n    boxTop: {\n        marginTop: 12\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n    },\n    group: {\n      marginTop: '30px',\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around'\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    debug: {\n        border: '1px solid red'\n    },\n    container: {\n        marginTop: '5%'\n    },\n    box: {\n        padding: 5,\n        borderRadius: '10px',\n        height: 180\n    },\n    smallBox: {\n        padding: 5,\n        width: '80%',\n        borderRadius: '10px',\n        height: 180\n    },\n    item: {\n        padding: 5\n    },\n    footerText: {\n      marginTop: 120\n    },\n    [theme.breakpoints.between(\"xs\",\"md\")]: {\n        column: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        avatar: {\n            transition: 'opacity 0.8s ease',\n            position: 'absolute',\n            left: '50%',\n            transform: 'translate(-50%)',\n            opacity: '0',\n            width: '150%',\n            maxWidth: 200,\n            minWidth: 175,\n            height: '190px',\n            borderRadius: '10px',\n            boxShadow: theme.shadows[3]\n        },\n        smallBox: {\n            width: '40%',\n        },\n        container: {\n            marginTop: '5%'\n        },\n        boxTop: {\n            marginTop: 20\n        },\n        footerText: {\n            marginTop: 20,\n            marginBottom: 40\n        }\n    },\n    [theme.breakpoints.up(\"md\")]: {\n        avatar: {\n            transition: 'opacity 0.8s ease',\n            position: 'relative',\n            left: 0,\n            transform: 'translate(0px)',\n            opacity: '0',\n            width: '150%',\n            maxWidth: 200,\n            minWidth: 175,\n            height: '190px',\n            borderRadius: '10px',\n            boxShadow: theme.shadows[3]\n        },\n        container: {\n            marginTop: '0',\n        },\n        smallBox: {\n            display: 'flex',\n            width: '80%',\n            justifyContent: 'flex-end'\n        }\n    },\n}));","import React, {FunctionComponent} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {DASHBOARD_ROUTES, useDashboardRouteDispatch} from \"../../../layouts/dashboard/router/DashboardRouterContext\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'block',\n        width: '100%',\n        margin: 5\n    },\n    [theme.breakpoints.between(\"xs\",\"md\")]: {\n        root: {\n            margin: 0,\n            marginTop: 5,\n            marginBottom: 5\n        }\n    }\n}));\n\ninterface  ISimpleCardOverview {\n    title: string;\n    link: string;\n    params?: string;\n    btnLabel?: string;\n};\n\nexport const SimpleCardOverview: FunctionComponent<ISimpleCardOverview> = (props):JSX.Element => {\n    // context\n    const dashboardRouteDispatch: any = useDashboardRouteDispatch();\n    const classes = useStyles();\n    const { title, children, link, btnLabel } = props;\n    const params = props.params? props.params : '';\n\n    // event handlers\n    const handleNavigation = (link: string) => {\n        switch (link) {\n            case 'groups':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.GROUPS\n                });\n                break;\n            case 'tags':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.TAGS\n                });\n                break;\n            case 'items':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.ITEMS\n                });\n                break;\n            case 'login':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.LOGIN\n                });\n                break;\n            case 'about':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.ABOUT\n                });\n                break;\n            case 'newRecipes':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.NEW_RECIPES\n                });\n                break;\n            case 'listRecipes':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.LIST_RECIPES,\n                    payload: params\n                });\n                break;\n            case 'allRecipes':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.LIST_RECIPES,\n                    payload: 'all'\n                });\n                break;\n            case 'myRecipes':\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.MY_RECIPES,\n                    payload: params\n                });\n                break;\n            default:\n                dashboardRouteDispatch ({\n                    type: DASHBOARD_ROUTES.WELCOME\n                });\n        }\n    };\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea onClick={handleNavigation.bind(null, link)}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {children}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"secondary\" onClick={handleNavigation.bind(null, link)}>\n                    {btnLabel ? btnLabel: 'More Details...'}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\n","import React, {FunctionComponent} from 'react';\nimport {Box, Grid, Typography} from \"@material-ui/core\";\n// styles\nimport appLogo from './../../../assets/img/logo.png';\nimport { useStyles } from './home.general.style';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {IAppContextState, useGlobalState} from \"../../../common/context/AppContext\";\nimport {SimpleCardOverview} from \"../cards/SimpleCardOverview\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst HomeGeneralView: FunctionComponent = (props): JSX.Element => {\n    // styles\n    const classes = useStyles();    \n    const imageRef: any = React.createRef();\n    const appContext: IAppContextState = useGlobalState();\n\n    const handleLoading = () => {\n        if (imageRef.current) imageRef.current.style.opacity = '1';\n    };\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12} md={4} className={classes.column}>\n                <Box className={classes.smallBox}>\n                    <Avatar ref={imageRef} alt=\"app-logo\" src={appLogo} onLoad={handleLoading} className={classes.avatar}/>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={8} className={classes.boxTop}>\n                <Typography>\n                    Welcome to the <strong>{appContext.title}</strong>. <br/>\n                    A web application to study &amp; store\n                    bible study notes, scriptures &amp; messages. \n                </Typography>\n                <Typography className={classes.boxTop}>\n                    You can open this web app on your browser &amp; it can also be saved on your mobile device to work as\n                    a native application. Also, after signing up, you will be able to - create (write) your own groups, scriptues &amp; messages\n                    which you can save for your own reference or share with the world.\n                </Typography>\n                <Typography className={classes.boxTop} color=\"secondary\">\n                    This application is completely free to use &amp; is ad-free!\n                </Typography>\n\n            </Grid>\n            <Grid item xs={12} className={classes.group}>\n                <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'Sign In'} link={'login'} btnLabel={'Sign In'}>\n                        Sign in with your Google Account\n                    </SimpleCardOverview>\n                </Grid>\n                <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'About'} link={'about'} btnLabel={'About the app'}>\n                        News, Features...\n                    </SimpleCardOverview>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nexport default HomeGeneralView;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    avatar: {\n        position: 'relative',\n        transform: 'translate(0)',\n        transition: 'opacity 0.8s ease',\n        opacity: '0',\n        width: '60%',\n        maxWidth: 200,\n        height: '200px',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[3]\n    },\n    boxTop: {\n        marginTop: 12\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n    },\n    group: {\n        marginTop: '30px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around'\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    debug: {\n        border: '1px solid red'\n    },\n    container: {\n        marginTop: '5%'\n    },\n    box: {\n        padding: 5,\n        borderRadius: '10px',\n        height: 180\n    },\n    smallBox: {\n        padding: 5,\n        width: '80%',\n        borderRadius: '10px',\n        height: 180\n    },\n    item: {\n        padding: 5\n    },\n    footerText: {\n        marginTop: 120\n    },\n    [theme.breakpoints.between(\"xs\",\"md\")]: {\n        column: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        avatar: {\n            transition: 'opacity 0.8s ease',\n            position: 'absolute',\n            left: '50%',\n            transform: 'translate(-50%)',\n            opacity: '0',\n            width: '150%',\n            maxWidth: 200,\n            minWidth: 175,\n            height: '190px',\n            borderRadius: '10px',\n            boxShadow: theme.shadows[3]\n        },\n        smallBox: {\n            width: '40%',\n        },\n        container: {\n            marginTop: '5%'\n        },\n        boxTop: {\n            marginTop: 20\n        },\n        footerText: {\n            marginTop: 20,\n            marginBottom: 40\n        }\n    },\n    [theme.breakpoints.up(\"md\")]: {\n        avatar: {\n            transition: 'opacity 0.8s ease',\n            position: 'relative',\n            left: 0,\n            transform: 'translate(0px)',\n            opacity: '0',\n            width: '150%',\n            maxWidth: 200,\n            minWidth: 175,\n            height: '190px',\n            borderRadius: '10px',\n            boxShadow: theme.shadows[3]\n        },\n        container: {\n            marginTop: '0',\n        },\n        smallBox: {\n            display: 'flex',\n            width: '80%',\n            justifyContent: 'flex-end'\n        }\n    },\n}));","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport {Skeleton} from \"@material-ui/lab\";\n// styles\nimport appLogo from './../../../assets/img/logo.png';\nimport { useStyles } from './home.profile.style';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {IAppContextState, useGlobalState} from \"../../../common/context/AppContext\";\nimport {SimpleCardOverview} from \"../cards/SimpleCardOverview\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\ninterface IHomeProfileViewProps {\n    isAdmin: boolean;\n}\n\nconst HomeProfileView: FunctionComponent<IHomeProfileViewProps> = (props): JSX.Element => {\n    // context\n    const { isAdmin } = props;\n    // states\n    const [groupContent, setGroupContent] = useState<JSX.Element>(<React.Fragment/>);\n    // styles\n    const classes = useStyles();\n    const imageRef: any = React.createRef();\n\n    // dependencies\n    useEffect(()=>{\n        if (isAdmin) setGroupContent (\n            <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'Groups'} link={'groups'} btnLabel={'Add / Edit Groups'}>\n                        Click here to add / edit groups\n                    </SimpleCardOverview>\n                </Grid>\n        );\n    },[isAdmin]);\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12} className={classes.group}>\n                <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'New Recipe'} link={'newRecipes'} btnLabel={'Create New...'}>\n                        Create a new Recipe\n                    </SimpleCardOverview>\n                </Grid>\n                <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'All Recipes'} link={'listRecipes'} params={'all'}>\n                        List all the free, public recipes\n                    </SimpleCardOverview>\n                </Grid>\n                <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'My Recipes'} link={'myRecipes'} params={'my'} btnLabel={'View My Recipes'}>\n                        Click here to view your recipes\n                    </SimpleCardOverview>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.group}>\n            <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'Tags'} link={'tags'} btnLabel={'Add / Edit Tags'}>\n                        Click here to add / edit tags\n                    </SimpleCardOverview>\n                </Grid>\n                <Grid item xs={12} md={6} lg={3}>\n                    <SimpleCardOverview title={'Items'} link={'items'} btnLabel={'Add / Edit Items'}>\n                        Click here to add / edit items\n                    </SimpleCardOverview>\n                </Grid>\n                {groupContent}\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nexport default HomeProfileView;","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport {Grid, Typography} from \"@material-ui/core\";\nimport {IAppContextState, useGlobalState} from \"../../common/context/AppContext\";\nimport {HomeSkeletonLoading} from \"./loading/Skeleton\";\n// styles\nimport { useStyles } from './home.style';\nimport HomeGeneralView from \"./general/HomeGeneral.view\";\nimport HomeProfileView from \"./profile/HomeProfile.view\";\n\nconst HomeView: FunctionComponent = (props): JSX.Element => {\n    // context\n    const appContext: IAppContextState = useGlobalState();\n    // states\n    const [heading, setHeading] = useState<string>('Loading...');\n    const [content, setContent] = useState<JSX.Element>(<HomeSkeletonLoading/>);    \n    // styles\n    const classes = useStyles();\n    // componentDidMount\n    useEffect(()=>{\n        // console.log('Rendering!!');\n        setTimeout(()=>{\n            if(appContext.profile) {                \n                if (appContext.profile.role === 'admin') {\n                    setContent(<HomeProfileView isAdmin={true}/>);\n                } else {\n                    setContent(<HomeProfileView isAdmin={false}/>);\n                }\n                setHeading(`Welcome, ${appContext.profile.name}`);\n            }\n            else {\n                // console.log('Profile not set', appContext.profile);\n                setHeading(`${appContext.title} v${appContext.version}`);\n                setContent(<HomeGeneralView/>);\n            }\n        }, 1500);\n    },[appContext.profile]);\n\n    return (\n        <React.Fragment>            \n            <Grid container className={classes.container}>\n                <Grid item xs={12} className={classes.heading}>\n                    <Typography variant=\"h5\" color=\"secondary\"><strong>{heading}</strong></Typography>\n                </Grid>\n                {content}\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default HomeView;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        marginTop: '5px',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexGrow: 1,\n        paddingBottom: '50px'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        width: '90%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    tabContent: {\n        width: '60%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        minWidth: 150,\n        padding: 10\n    },\n    cardText: {\n        color: theme.palette.primary.main,\n        fontSize: 14\n    },\n    notificationButton: {\n        color: 'white'\n    }\n}));","import React, {FunctionComponent} from 'react';\nimport { useSnackbar } from 'notistack';\n// material\nimport Button from '@material-ui/core/Button';\n// custom\nimport { useStyles } from './notification.style';\n\ninterface ICloseActionButtonProps {\n    keyObj: any;\n}\n\n// notificationBox action - OK\nconst CloseActionButton: FunctionComponent<ICloseActionButtonProps> = (props):JSX.Element => {\n    const classes = useStyles();\n    const { keyObj } = props;\n    const { closeSnackbar }  = useSnackbar();\n    return (\n        <React.Fragment>\n            <Button className={classes.notificationButton} onClick={() => { closeSnackbar(keyObj) }}>\n                OK\n            </Button>\n        </React.Fragment>\n    );\n};\n\nexport default CloseActionButton;","import React, { FunctionComponent } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'none',\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    display: {\n      display: 'block'        \n    }\n}));\n\nexport interface ILinearLoaderProps {\n  display: boolean;\n}\n\nexport const LinearLoader: FunctionComponent<ILinearLoaderProps> = (props) => {\n  const { display } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, display && classes.display)}>\n      <LinearProgress color=\"secondary\" />\n      <br />      \n    </div>\n  );\n};","import React, {useState, useContext, FunctionComponent, useEffect, useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {LinearLoader} from \"../../../components/loaders/linear-loader/LinearLoader\";\nimport {addGroupDetails} from \"../../../common/async/AsyncCalls\";\n// custom\n\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    validationText: {\n        color: 'red'\n    }\n});\n\ninterface IGroupCreateProps {\n    onCreateGroup: (action: string) => void;\n}\n\nconst GroupCreate: FunctionComponent<IGroupCreateProps> = (props) => {\n    const classes = useStyles();\n    const { onCreateGroup } = props;\n    // state\n    const [groupTitle, setGroupTitle] = useState('');\n    const [groupSlug, setGroupSlug] = useState('');\n    const [groupDescription, setGroupDescription] = useState('');\n    const [isChecked, setCheckBox] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n\n    // lifecycle events\n    const resetAllFields = useCallback(() => {\n        setGroupTitle('');\n        setGroupSlug('');\n        setGroupDescription('');\n        setCheckBox(false);\n    },[]);\n\n    // event handlers\n    const handleCheckboxChange = (name: string) => (event: any) => {\n        setCheckBox(event.target.checked);\n    };\n\n    const handleChange = (event: any) => {\n        if (event.target.name === 'title') {\n            setGroupTitle(event.target.value);\n        } else if (event.target.name === 'slug') {\n            setGroupSlug(event.target.value.toLowerCase());\n        } else {\n            setGroupDescription(event.target.value);\n        }\n    };\n\n    const handleSubmit = () => {\n        setLoading(true);\n        if(groupTitle && groupDescription && groupSlug) {\n            setLoading(true);\n            // console.log('Input data is: ', groupTitle, groupSlug, groupDescription, isChecked);\n            addGroupDetails({\n                title: groupTitle.trim(),\n                slug: groupSlug.trim(),\n                description: groupDescription,\n                premium: isChecked\n            })\n                .then((res: any) => {\n                    resetAllFields();\n                    return onCreateGroup('success');\n                })\n                .catch((err: any) => onCreateGroup('failure'))\n                .finally(()=> setLoading(false));\n        }\n    };\n\n    const errorMsgText = () => <Typography className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        if (groupTitle !== '' && groupSlug !== '' && groupDescription !=='' ) setErrMsg(null);\n        else setErrMsg(`Please fill in missing fields`);\n    },[groupTitle, groupSlug, groupDescription]);\n\n    // render\n    return (\n        <Grid item xs={12} md={12}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Typography  variant=\"h5\" component=\"h2\">Create New Group / Category</Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        All Fields are required to be filled in*\n                    </Typography>\n                    {errorMsgText()}\n                    <LinearLoader display={isLoading}/>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        id=\"title\"\n                        label=\"Group Title\"\n                        name=\"title\"\n                        value = {groupTitle}\n                        autoFocus\n                        onChange={handleChange}/>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        id=\"slug\"\n                        label=\"slug (lowercase)\"\n                        name=\"slug\"\n                        value = {groupSlug}\n                        autoFocus\n                        onChange={handleChange}/>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        name=\"description\"\n                        label=\"Provide Description\"\n                        type=\"description\"\n                        value = {groupDescription}\n                        onChange={handleChange}/>\n                    <div className={classes.checkBoxContent}>\n                        <Checkbox\n                            checked={isChecked}\n                            onChange={handleCheckboxChange('checkedA')}\n                            inputProps={{\n                                'aria-label': 'primary checkbox',\n                            }} />\n                        <Typography className={classes.checkBoxText} variant=\"button\" component=\"em\">\n                            Check if the Group is only for Signed in Users\n                        </Typography>\n                    </div>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Button onClick={handleSubmit} disabled={!!errMsg} variant=\"contained\" size=\"medium\" color=\"primary\">Create Group</Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default GroupCreate;","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Card, CardActions, CardContent, Fab, Grid, Typography} from \"@material-ui/core\";\nimport {Skeleton} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst GroupListSkeleton: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Skeleton>\n                        <Typography variant=\"h5\" component=\"h2\">Loading Text Title, please...</Typography>\n                    </Skeleton>\n                    <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading Text subtitle..\n                        </Typography>\n                    </Skeleton>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Skeleton variant=\"circle\" width={40} height={40} />\n                    <Skeleton variant=\"circle\" width={40} height={40} />\n                </CardActions>\n            </Card>\n        </Grid>\n        );\n};\n\nexport default GroupListSkeleton;","import React, { FunctionComponent } from 'react';\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Chip} from \"@material-ui/core\";\n\ninterface IDisabledBadgeProps {\n    value: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst DisabledBadge: FunctionComponent<IDisabledBadgeProps> = (props): JSX.Element =>{\n    const classes = useStyles();\n    const { value } = props;\n\n    return (\n        <div className={classes.root}>\n            <Chip variant=\"outlined\" color=\"secondary\" label={value} className={classes.chip} />\n        </div>\n    );\n};\n\nexport default DisabledBadge;\n\n","import React, { FunctionComponent } from \"react\";\n// material\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport {makeStyles} from \"@material-ui/core/styles\";\n// custom\nimport DisabledBadge from \"../../../components/badges/disabled/DisabledBadge\";\nimport {IGroup} from \"../common/group-interfaces\";\nimport {useSnackbar} from \"notistack\";\n\ninterface IGroupCardProps extends IGroup {\n    onEdit: (data: IGroup) => void;\n    onDelete: (id: string) => void;\n}\n\n//styling\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    smallText: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 12,\n        color: theme.palette.primary.dark\n    },\n    action: {\n        display: 'flex',\n        // border: '1px solid red',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst GroupCard: FunctionComponent<IGroupCardProps> = (props):JSX.Element => {\n    const { title, id, description, onDelete, onEdit, premium, slug } = props;\n    const classes = useStyles();\n    const { enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    // add multiple actions to one snackbar\n    const action = (key: number) => (\n        <React.Fragment>\n            <Button onClick={() =>{\n                closeSnackbar(key);\n                onDelete(id);\n            }}>{'Yes'}</Button>\n            <Button onClick={() => { closeSnackbar(key); }}>{'No'}</Button>\n        </React.Fragment>\n    );\n\n    // event handlers\n    const handleEdit = () => {\n        onEdit({id, title, description, premium, slug});\n    };\n\n    const handleDelete = () => {\n        enqueueSnackbar(`Are you sure you want to delete this group?`, {variant: 'warning', action});\n    };\n\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"h5\" component=\"h2\">{props.title}</Typography>\n                    <Typography className={classes.pos} component=\"p\">\n                        {props.description}\n                    </Typography>\n                    <DisabledBadge value={props.slug} />\n                    <Typography className={classes.smallText} component=\"p\">\n                        {props.premium? `* This group is visible to signed in users only`: `* This group is public`}\n                    </Typography>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Fab\n                        className={classes.fab}\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"Update\"\n                        onClick={handleEdit}>\n                        <EditIcon />\n                    </Fab>\n                    <Fab\n                        className={classes.fab}\n                        size=\"small\"\n                        aria-label=\"Delete\"\n                        onClick={handleDelete}>\n                        <DeleteIcon />\n                    </Fab>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default GroupCard;\n","import React, {FunctionComponent, useEffect, useState} from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DisabledBadge from \"../../badges/disabled/DisabledBadge\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {CardMedia} from \"@material-ui/core\";\n// custom\nimport noResultsImg from './../../../assets/img/broke.png';\n\n\ninterface IEmptySearchCardProps {\n    query?: string;\n    type: 'search' | 'empty' | 'error';\n}\n\n//styles\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        minWidth: 175,\n    },\n    media: {\n        width: '50%',\n        minWidth: 250,\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12\n    },\n    smallText: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 12,\n        color: theme.palette.primary.dark\n    },\n    action: {\n        display: 'flex',\n        // border: '1px solid red',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\n\nconst EmptySearchCard: FunctionComponent<IEmptySearchCardProps>= (props): JSX.Element => {\n    const classes = useStyles();\n    const { query, type } = props;\n    // event handlers\n    const getContent = (type: 'search' | 'empty' | 'error', query?: string):JSX.Element => {\n        if (type === 'empty') {\n            return <Typography className={classes.pos} component=\"p\">\n                Sorry but there is currently nothing to see here. How about you add some content ?\n            </Typography>\n        } else if (type === 'search') {\n            return <Typography className={classes.pos} component=\"p\">\n                Sorry but your search { query ? ` \"${query}\" `: \"\" } yielded nothing. Try again!\n            </Typography>\n        } else {\n            return <Typography className={classes.pos} component=\"p\">\n                Oops! There is nothing to see here. Try again or go to the main menu...\n            </Typography>\n        }\n    }\n    // states\n    const [content, setContent] = useState<JSX.Element>(getContent('empty'));\n\n    // componentDidUpdate\n    useEffect(()=>{\n        setContent(getContent(type, query));\n    },[type, query]);\n\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardMedia\n                    className={classes.media}\n                    image={noResultsImg}\n                    title=\"Nothing found\"\n                />\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"h5\" component=\"h2\">Oops! Nothing found...</Typography>\n                    {content}\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n}\n\nexport default EmptySearchCard;","import React, {FunctionComponent, useCallback, useEffect, useRef, useState} from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\n// custom\nimport { IGroup } from \"../common/group-interfaces\";\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {LinearLoader} from \"../../../components/loaders/linear-loader/LinearLoader\";\nimport {updateGroupById} from \"../../../common/async/AsyncCalls\";\n\ninterface IGroupModalProps {\n    isOpen: boolean;\n    data: IGroup;\n    onModalClose: (status: boolean, value: 'success' | 'failure' | 'cancel') => void;\n}\n\nexport const useStyles = makeStyles(theme => ({\n    validationText: {\n        color: 'red'\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    }\n}));\n\nconst GroupUpdateModal: FunctionComponent<IGroupModalProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const { isOpen, data } = props;\n    // states\n    const [groupTitle, setGroupTitle] = useState('');\n    const [groupSlug, setGroupSlug] = useState('');\n    const [groupDescription, setGroupDescription] = useState('');\n    const [isChecked, setChecked] = useState(data.premium);\n    const [isLoading, setLoading] = useState(false);\n    const [tagId, setTagId] = useState(data.id);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n\n    // event handlers\n    const handleClose = ()=>{\n        props.onModalClose(false, 'cancel');\n    };\n\n    const handleCheckboxChange = (evt: any) => {\n        setChecked(evt.target.checked);\n    };\n\n    const handleSubmit = () => {\n        setLoading(true);\n        // console.log('Change details are: ', groupTitle, groupDescription, groupSlug, isChecked);\n        if(groupTitle && groupDescription && groupSlug) {\n            setLoading(true);\n            updateGroupById(data.id, {\n                title: groupTitle.trim(),\n                slug: groupSlug.trim(),\n                description: groupDescription,\n                premium: isChecked\n            })\n                .then( res => {\n                    setLoading(false);\n                    props.onModalClose(false, 'success');\n                }, err => {\n                    setLoading(false);\n                    console.log('Error updating tag record: ', err);\n                    props.onModalClose(false, 'failure');\n                });\n        }\n        setLoading(false);\n    };\n\n    const handleChange = (event: any) => {\n        if (event.target.name === 'title') {\n            setGroupTitle(event.target.value);\n        } else if (event.target.name === 'slug') {\n            setGroupSlug(event.target.value.toLowerCase());\n        } else {\n            setGroupDescription(event.target.value);\n        }\n    };\n\n    const getErrorMsgText = (): JSX.Element => <Typography\n        className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        if (groupTitle !== '' && groupSlug !== '' && groupDescription !=='' ) setErrMsg(null);\n        else setErrMsg(`Please fill in missing fields`);\n    },[groupTitle, groupSlug, groupDescription]);\n\n    return (\n        <Dialog\n            open={isOpen}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\">{\"Update Group Details\"}</DialogTitle>\n            <DialogContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    All Fields are required to be filled in*\n                </Typography>\n                {getErrorMsgText()}\n                <LinearLoader display={isLoading}/>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    id=\"title\"\n                    label=\"Group Title\"\n                    name=\"title\"\n                    defaultValue = {data.title}\n                    autoFocus\n                    onBlur={handleChange}/>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    id=\"slug\"\n                    label=\"slug (lowercase)\"\n                    name=\"slug\"\n                    defaultValue = {data.slug}\n                    autoFocus\n                    onBlur={handleChange}/>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Provide Description\"\n                    type=\"description\"\n                    defaultValue = {data.description}\n                    onBlur={handleChange}/>\n                <div className={classes.checkBoxContent}>\n                    <Checkbox\n                        checked = {isChecked}\n                        onChange={handleCheckboxChange}\n                        inputProps={{\n                            'aria-label': 'primary checkbox',\n                        }} />\n                    <Typography\n                        className={classes.checkBoxText}\n                        variant=\"button\"\n                        component=\"em\">\n                        Check if the Group is only for Signed in Users\n                    </Typography>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={!!errMsg}\n                    onClick={handleSubmit}\n                    variant=\"contained\"\n                    color=\"primary\">\n                    Update\n                </Button>\n                <Button\n                    onClick={handleClose.bind('cancel')}\n                    color=\"primary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n}\n\nexport default  GroupUpdateModal;","import React, {useState, useContext, FunctionComponent, useEffect, createRef} from 'react';\n// material\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ResetIcon from '@material-ui/icons/Cached';\n// custom\nimport {ISearch} from \"./search-interface\";\n\n// interface\ninterface ISearchCardProps extends ISearch {\n    onSearch: (data: ISearch) => void;\n    onReset: () => void;\n}\n\n// styles\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        flexDirection: 'row',\n        minWidth: 175,\n        marginTop: 10\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    validationText: {\n        color: 'red'\n    }\n});\n\nconst SearchCard: FunctionComponent<ISearchCardProps> = (props) => {\n    const classes = useStyles();\n    const { table, onSearch, onReset } = props;\n    // state\n    const [groupQuery, setGroupQuery] = useState('');\n    const [isDisabled, toggleDisabled] = useState(true);\n    const [isPartial, togglePartial] = useState(false);\n    const buttonRef = createRef<any>();\n    // event handlers\n\n    const handleChange = (event: any) => {\n        if (event.target.name === 'query') {\n            setGroupQuery(event.target.value);\n        }\n        // buttonRef.current.focus();\n    };\n\n    const toggleSearchType = () => {\n        togglePartial((prev) => !prev);\n    }\n\n    const handleSubmit = () => isPartial ?\n        onSearch ({table, type: 'partial', query: groupQuery}): onSearch ({table, type: 'full',\n            query: groupQuery\n        });\n\n    const handleReset = () => {\n        setGroupQuery('');\n        onReset();\n    }\n\n\n    useEffect(()=>{\n        if (groupQuery !== '') toggleDisabled(false);\n        else toggleDisabled(true);\n    },[groupQuery]);\n\n    // render\n    return (\n        <Grid item xs={12} md={12}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        required\n                        id=\"query\"\n                        label={`Search ${table}`}\n                        name=\"query\"\n                        value = {groupQuery}\n                        autoFocus\n                        onChange={handleChange}/>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Fab\n                        size=\"small\"\n                        title=\"Clear search\"\n                        ref={buttonRef}\n                        onClick={handleReset}\n                        color={isPartial ? 'secondary': 'primary'}\n                        aria-label=\"Enable partial search\">\n                        <ResetIcon />\n                    </Fab>\n                    <Fab\n                        size=\"small\"\n                        title={`${isPartial ? `Disable`: `Enable`} partial search`}\n                        ref={buttonRef}\n                        onClick={toggleSearchType}\n                        color={isPartial ? 'secondary': 'primary'}\n                        aria-label=\"Enable partial search\">\n                        <TextFormatIcon />\n                    </Fab>\n                    <Fab\n                        ref={buttonRef}\n                        onClick={handleSubmit}\n                        disabled={isDisabled}\n                        color=\"secondary\"\n                        aria-label=\"add\">\n                        <SearchIcon />\n                    </Fab>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default SearchCard;","import React, {FunctionComponent, useCallback, useEffect, useState} from 'react';\n// styling\nimport { useStyles } from './group.view.style';\nimport { CssBaseline, Grid } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\n// custom\nimport CloseActionButton from \"../../components/notifications/CloseActionButton\";\nimport GroupCreate from \"./create/GroupCreate\";\nimport GroupListSkeleton from \"./loading/GroupListSkeleton\";\nimport {deleteGroupById, getAllGroups, searchByText } from \"../../common/async/AsyncCalls\";\nimport GroupCard from \"./card/GroupCard\";\nimport EmptySearchCard from \"../../components/card/404/EmptySearchCard\";\nimport {IGroup} from \"./common/group-interfaces\";\nimport GroupUpdateModal from \"./update/GroupUpdateModal\";\nimport SearchCard from \"../../components/search/SearchCard\";\nimport {ISearch} from \"../../components/search/search-interface\";\n\nconst GroupView: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    const { enqueueSnackbar} = useSnackbar();\n    // loading state\n    const defaultGroupContent = (): JSX.Element => {\n        return <React.Fragment>\n            <GroupListSkeleton/>\n            <GroupListSkeleton/>\n            <GroupListSkeleton/>\n        </React.Fragment>;\n    };\n    // states\n    const [groupListContent, setGroupListContent] = useState<JSX.Element>(defaultGroupContent());\n    const [isModal, setModal] = useState<boolean>(false);\n    const [groupModalData, setGroupModalData] = useState<IGroup>({\n        id: '',\n        title: '',\n        description: '',\n        premium: false,\n        slug: ''\n    });\n    // lifecycle methods\n    const fetchAllGroups = useCallback(()=>{\n        setGroupListContent(defaultGroupContent());\n        getAllGroups()\n            .then((res: any) => {\n                // console.log('Response is: ', res.data);\n                if (res.data.length > 0) {\n                    const list: JSX.Element[] = res.data?.map((item: any, index:number) => <GroupCard\n                        key={index}\n                        onEdit={handleGroupEdit}\n                        onDelete={handleGroupDelete}\n                        id={item._id}\n                        title={item.title}\n                        description={item.description}\n                        slug={item.slug}\n                        premium={item.premium}/>\n                    );\n                    setGroupListContent(<React.Fragment>\n                        {list}\n                    </React.Fragment>);\n                } else {\n                    setGroupListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            }).catch((err: any) => console.log('Error fetching data: ', err));\n    },[]);\n\n    // notificationBox action - OK\n    const okActionButton = (key:number) => (\n        <CloseActionButton keyObj={key} />\n    );\n\n\n    // event handlers\n    const handleGroupCreate = (action: string) => {\n        console.log('Action was a: ', action);\n        if(action === 'success') {\n            fetchAllGroups();\n            enqueueSnackbar(`Group record created !`, {variant: 'info', action: okActionButton });\n        } else if (action === 'failure') {\n            enqueueSnackbar(`Error creating Group record...`, {variant: 'error', action: okActionButton });\n        }\n    };\n\n    const handleGroupSearch = (data: ISearch) => {\n        setGroupListContent(defaultGroupContent());\n        searchByText(data)\n            .then((res: any) => {\n                console.log('Search Result is: ', res.data);\n                if (res.data.length > 0) {\n                    const list: JSX.Element[] = res.data?.map((item: any, index:number) => <GroupCard\n                        key={index}\n                        onEdit={handleGroupEdit}\n                        onDelete={handleGroupDelete}\n                        id={item._id}\n                        title={item.title}\n                        description={item.description}\n                        slug={item.slug}\n                        premium={item.premium}/>\n                    );\n                    setGroupListContent(<React.Fragment>\n                        {list}\n                    </React.Fragment>);\n                } else {\n                    setGroupListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            });\n    };\n\n    const handleGroupEdit = (data: IGroup) => {\n        // console.log('Group card to edit: ', data);\n        setGroupModalData(data);\n        setModal(true);\n    };\n\n    const handleSearchReset = () => {\n        fetchAllGroups();\n    };\n\n    const handleGroupDelete = (id: string) => {\n        deleteGroupById(id)\n            .then((res: any) => {\n                enqueueSnackbar(`Group record deleted !`, {variant: 'info', action: okActionButton });\n                return fetchAllGroups();\n            })\n            .catch((err: any) => enqueueSnackbar(`Error deleting Group record...`,\n                {variant: 'error', action: okActionButton }))\n    };\n\n    const handleGroupModalClose = (status: boolean, value: 'success' | 'failure' | 'cancel') => {\n        console.log('Modal status is: ', status);\n        if (value === 'success') {\n            enqueueSnackbar(`Group record updated !`, {variant: 'info', action: okActionButton });\n        } else if (value === 'failure') {\n            enqueueSnackbar(`Error updating Group record...`, {variant: 'error', action: okActionButton });\n        }\n        setModal(status);\n        return fetchAllGroups();\n    };\n\n    // component did mount\n    useEffect(()=>{\n        fetchAllGroups();\n    },[]);\n\n    return (\n        <div className = {classes.root}>\n            <CssBaseline />\n            <div className={classes.cardContent}>\n                <Grid container spacing={1}>\n                    <GroupCreate onCreateGroup={handleGroupCreate}/>\n                    <SearchCard table=\"groups\" onSearch={handleGroupSearch} onReset={handleSearchReset}/>\n                    {groupListContent}\n                    <GroupUpdateModal\n                        isOpen={isModal}\n                        data={groupModalData}\n                        onModalClose={handleGroupModalClose}/>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default GroupView;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        marginTop: '5px',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexGrow: 1,\n        paddingBottom: '50px'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        width: '90%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    tabContent: {\n        width: '60%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));","import React, {useState, FunctionComponent, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {LinearLoader} from \"../../../components/loaders/linear-loader/LinearLoader\";\nimport {addTagDetails} from \"../../../common/async/AsyncCalls\";\n// custom\n\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    validationText: {\n        color: 'red'\n    }\n});\n\ninterface ITagCreateProps {\n    onCreateTag: (action: string) => void;\n}\n\nconst TagCreate: FunctionComponent<ITagCreateProps> = (props) => {\n    const classes = useStyles();\n    const { onCreateTag } = props;\n    // state\n    const [tagTitle, setTagTitle] = useState('');\n    const [tagDescription, setTagDescription] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n\n    // lifecycle methods\n    const resetAllFields = () => {\n        setTagTitle('');\n        setTagDescription('');\n    };\n\n    // event handlers\n    const handleChange = (event: any) => {\n        // console.log('Event is: ', event.target);\n        if (event.target.name === 'title') {\n            setTagTitle(event.target.value);\n        } else {\n            setTagDescription(event.target.value);\n        }\n    };\n\n    const handleSubmit = () => {\n        setLoading(true);\n        if(tagTitle && tagDescription) {\n            addTagDetails({\n                name: tagTitle,\n                description: tagDescription\n            })\n                .then((res: any) => {\n                    resetAllFields();\n                    return onCreateTag('success');\n                })\n                .catch((err: any) => onCreateTag('failure'))\n                .finally(()=> setLoading(false));\n        }\n    };\n\n    const errorMsgText = () => <Typography className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        if (tagTitle !== '' && tagDescription !=='' ) setErrMsg(null);\n        else setErrMsg(`Please fill in missing fields`);\n    },[tagTitle, tagDescription]);\n\n    // render\n    return (\n        <Grid item xs={12} md={12}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Typography  variant=\"h5\" component=\"h2\">Create New Tag / Category</Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        All Fields are required to be filled in*\n                    </Typography>\n                    {errorMsgText()}\n                    <LinearLoader display={isLoading}/>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        id=\"title\"\n                        label=\"Tag Title\"\n                        name=\"title\"\n                        value = {tagTitle}\n                        autoFocus\n                        onChange={handleChange}/>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        name=\"description\"\n                        label=\"Provide Description\"\n                        type=\"description\"\n                        value = {tagDescription}\n                        onChange={handleChange}/>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Button onClick={handleSubmit} disabled={!!errMsg} variant=\"contained\" size=\"medium\" color=\"primary\">Create Tag</Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default TagCreate;","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardActions, CardContent, Grid, Typography} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst TagListSkeleton: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Skeleton>\n                        <Typography variant=\"h5\" component=\"h2\">Loading Text Title, please...</Typography>\n                    </Skeleton>\n                    <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading Text subtitle..\n                        </Typography>\n                    </Skeleton>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Skeleton variant=\"circle\" width={40} height={40} />\n                    <Skeleton variant=\"circle\" width={40} height={40} />\n                </CardActions>\n            </Card>\n        </Grid>\n        );\n};\n\nexport default TagListSkeleton;","import React, {FunctionComponent, useState} from 'react';\n// material\nimport {Theme} from \"@material-ui/core/styles\";\nimport {Avatar, Chip, makeStyles, Tooltip} from \"@material-ui/core\";\n//styles\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    }\n}));\n\ninterface ISimpleBadgeProps {\n    name: string;\n    description: string;\n}\n\nconst SimpleBadge: FunctionComponent<ISimpleBadgeProps> = (props): JSX.Element => {\n    const classes = useStylesBootstrap();\n    const { name, description } = props;\n    // states\n    const [isOpen, toggleOpen] = useState(false);\n    // event\n    const toggleTooltip = () => toggleOpen((prev: boolean) => !prev);\n\n    return <React.Fragment>\n        <Tooltip\n            open={isOpen}\n            disableFocusListener\n            disableHoverListener\n            disableTouchListener\n            title={description}\n            arrow\n            placement=\"top\"\n            classes={classes}>\n            <Chip\n                avatar={<Avatar>{name.substring(0,1).toUpperCase()}</Avatar>}\n                label={name}\n                clickable\n                onClick={toggleTooltip}\n                color=\"secondary\"/>\n        </Tooltip>\n    </React.Fragment>\n}\n\nexport default SimpleBadge;","import React, { FunctionComponent } from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {useSnackbar} from \"notistack\";\nimport Button from \"@material-ui/core/Button\";\n// custom\nimport {ITag} from \"../common/tag-interfaces\";\nimport SimpleBadge from \"../../../components/badges/simple/SimpleBadge\";\n\ninterface ITagCardProps extends ITag {\n    onEdit: (data: ITag) => void;\n    onDelete: (id: string) => void;\n}\n\n//styles\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    smallText: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 12,\n        color: theme.palette.primary.dark\n    },\n    action: {\n        display: 'flex',\n        // border: '1px solid red',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst TagCard: FunctionComponent<ITagCardProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const { id, name, description, onEdit, onDelete } = props;\n    const { enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    // add multiple actions to one snackbar\n    const action = (key: number) => (\n        <React.Fragment>\n            <Button onClick={() =>{\n                closeSnackbar(key);\n                onDelete(id);\n            }}>{'Yes'}</Button>\n            <Button onClick={() => { closeSnackbar(key); }}>{'No'}</Button>\n        </React.Fragment>\n    );\n    // event handlers\n    // event handlers\n    const handleEdit = () => {\n        onEdit({id, name, description });\n    };\n\n    const handleDelete = () => {\n        enqueueSnackbar(`Are you sure you want to delete this group?`, {variant: 'warning', action});\n    };\n    return  <Grid item xs={12} md={4}>\n        <Card className={classes.card}>\n            <CardContent className={classes.cardContent}>\n                <Typography variant=\"h5\" component=\"h2\">{name}</Typography>\n                <Typography className={classes.pos} component=\"p\">\n                    {props.description}\n                </Typography>\n                <SimpleBadge name={name} description={description} />\n            </CardContent>\n            <CardActions className={classes.action}>\n                <Fab\n                    className={classes.fab}\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Update\"\n                    onClick={handleEdit}>\n                    <EditIcon />\n                </Fab>\n                <Fab\n                    className={classes.fab}\n                    size=\"small\"\n                    aria-label=\"Delete\"\n                    onClick={handleDelete}>\n                    <DeleteIcon />\n                </Fab>\n            </CardActions>\n        </Card>\n    </Grid>\n}\n\nexport default TagCard;","import React, {FunctionComponent, useEffect, useState} from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\n// custom\nimport { ITag } from \"../common/tag-interfaces\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from \"@material-ui/core\";\nimport { LinearLoader } from \"../../../components/loaders/linear-loader/LinearLoader\";\nimport { updateTagById } from \"../../../common/async/AsyncCalls\";\n\ninterface ITagModalProps {\n    isOpen: boolean;\n    data: ITag;\n    onModalClose: (status: boolean, value: 'success' | 'failure' | 'cancel') => void;\n}\n\nexport const useStyles = makeStyles(theme => ({\n    validationText: {\n        color: 'red'\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    }\n}));\n\nconst TagUpdateModal: FunctionComponent<ITagModalProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const { isOpen, data } = props;\n    // states\n    const [groupName, setTagName] = useState('');\n    const [groupDescription, setTagDescription] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n\n    // event handlers\n    const handleClose = ()=>{\n        props.onModalClose(false, 'cancel');\n    };\n\n    const handleSubmit = () => {\n        setLoading(true);\n        // console.log('Change details are: ', groupName, groupDescription, groupSlug, isChecked);\n        if(groupName && groupDescription) {\n            setLoading(true);\n            updateTagById(data.id, {\n                name: groupName.trim(),\n                description: groupDescription,\n            })\n                .then( res => {\n                    setLoading(false);\n                    props.onModalClose(false, 'success');\n                }, err => {\n                    setLoading(false);\n                    console.log('Error updating tag record: ', err);\n                    props.onModalClose(false, 'failure');\n                });\n        }\n        setLoading(false);\n    };\n\n    const handleChange = (event: any) => {\n        if (event.target.name === 'name') {\n            setTagName(event.target.value);\n        } else {\n            setTagDescription(event.target.value);\n        }\n    };\n\n    const getErrorMsgText = (): JSX.Element => <Typography\n        className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        if (groupName !== '' && groupDescription !=='' ) setErrMsg(null);\n        else setErrMsg(`Please fill in missing fields`);\n    },[groupName, groupDescription]);\n\n    return (\n        <Dialog\n            open={isOpen}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\">{\"Update Tag Details\"}</DialogTitle>\n            <DialogContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    All Fields are required to be filled in*\n                </Typography>\n                {getErrorMsgText()}\n                <LinearLoader display={isLoading}/>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    id=\"title\"\n                    label=\"Tag Name\"\n                    name=\"name\"\n                    defaultValue = {data.name}\n                    autoFocus\n                    onBlur={handleChange}/>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Provide Description\"\n                    type=\"description\"\n                    defaultValue = {data.description}\n                    onBlur={handleChange}/>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={!!errMsg}\n                    onClick={handleSubmit}\n                    variant=\"contained\"\n                    color=\"primary\">\n                    Update\n                </Button>\n                <Button\n                    onClick={handleClose.bind('cancel')}\n                    color=\"primary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n}\n\nexport default TagUpdateModal;","import React, {FunctionComponent, useCallback, useEffect, useState} from 'react';\n// styling\nimport {useStyles} from './tag.view.style';\nimport {CssBaseline, Grid} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport CloseActionButton from \"../../components/notifications/CloseActionButton\";\nimport TagCreate from \"./create/TagCreate\";\nimport TagListSkeleton from \"./loading/TagListSkeleton\";\nimport {ITag} from \"./common/tag-interfaces\";\nimport {ISearch} from \"../../components/search/search-interface\";\nimport {deleteTagById, getAllTags, searchByText} from \"../../common/async/AsyncCalls\";\nimport EmptySearchCard from \"../../components/card/404/EmptySearchCard\";\nimport TagCard from \"./card/TagCard\";\nimport SearchCard from \"../../components/search/SearchCard\";\nimport TagUpdateModal from \"./update/TagUpdateModal\";\n\nconst TagView: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    const {enqueueSnackbar} = useSnackbar();\n    // loading state\n    const defaultTagContentList = (): JSX.Element => <React.Fragment>\n        <TagListSkeleton/>\n        <TagListSkeleton/>\n        <TagListSkeleton/>\n    </React.Fragment>;\n    // states\n    const [tagListContent, setTagListContent] = useState<JSX.Element>(defaultTagContentList());\n    const [isModal, setModal] = useState<boolean>(false);\n    const [tagModalData, setTagModalData] = useState<ITag>({\n        id: '',\n        name: '',\n        description: ''\n    });\n    // notificationBox action - OK\n    const okActionButton = (key: number) => (\n        <CloseActionButton keyObj={key}/>\n    );\n    // lifecycle methods\n    const fetchAllTags = useCallback(() => {\n        setTagListContent(defaultTagContentList());\n        getAllTags()\n            .then((res: any) => {\n                // console.log('Search Result is: ', res.data);\n                if (res.data.length > 0) {\n                    const list: JSX.Element[] = res.data?.map((item: any, index: number) => <TagCard\n                        key={index}\n                        onEdit={handleTagEdit}\n                        onDelete={handleTagDelete}\n                        id={item._id}\n                        name={item.name}\n                        description={item.description}/>\n                    );\n                    setTagListContent(<React.Fragment>\n                        {list}\n                    </React.Fragment>);\n                } else {\n                    setTagListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            }).catch((err: any) => console.log('Error fetching data: ', err));\n    }, []);\n\n    // event handlers\n    const handleTagCreate = (action: string) => {\n        // console.log('Action was a: ', action);\n        if (action === 'success') {\n            enqueueSnackbar(`Tag record created !`, {variant: 'info', action: okActionButton});\n            fetchAllTags();\n        } else if (action === 'failure') {\n            enqueueSnackbar(`Error creating Tag record...`, {variant: 'error', action: okActionButton});\n        }\n    };\n\n    const handleTagEdit = (data: ITag) => {\n        setTagModalData(data);\n        setModal(true);\n    };\n\n    const handleTagDelete = (id: string) => {\n        deleteTagById(id)\n            .then((res: any) => {\n                enqueueSnackbar(`Tag record deleted !`, {variant: 'info', action: okActionButton});\n                return fetchAllTags();\n            })\n            .catch((err: any) => enqueueSnackbar(`Error deleting Tag record...`,\n                {variant: 'error', action: okActionButton}))\n    };\n\n    const handleTagModalClose = (status: boolean, value: 'success' | 'failure' | 'cancel') => {\n        console.log('Modal status is: ', status);\n        if (value === 'success') {\n            enqueueSnackbar(`Tag record updated !`, {variant: 'info', action: okActionButton });\n        } else if (value === 'failure') {\n            enqueueSnackbar(`Error updating Tag record...`, {variant: 'error', action: okActionButton });\n        }\n        setModal(status);\n        return fetchAllTags();\n    };\n\n    const handleTagSearch = (data: ISearch) => {\n        setTagListContent(defaultTagContentList());\n        searchByText(data)\n            .then((res: any) => {\n                // console.log('Search Result is: ', res.data);\n                if (res.data.length > 0) {\n                    const list: JSX.Element[] = res.data?.map((item: any, index: number) => <TagCard\n                        key={index}\n                        onEdit={handleTagEdit}\n                        onDelete={handleTagDelete}\n                        id={item._id}\n                        name={item.name}\n                        description={item.description}/>\n                    );\n                    setTagListContent(<React.Fragment>\n                        {list}\n                    </React.Fragment>);\n                } else {\n                    setTagListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            }).catch((err: any) => console.log('Error Searching data: ', err));\n    };\n\n    const handleTagReset = () => {\n        fetchAllTags();\n    };\n\n    // Component did mount\n    useEffect(()=>{\n        fetchAllTags();\n    },[]);\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <div className={classes.cardContent}>\n                <Grid container spacing={1}>\n                    <TagCreate onCreateTag={handleTagCreate}/>\n                    <TagUpdateModal isOpen={isModal} data={tagModalData} onModalClose={handleTagModalClose}/>\n                    <SearchCard table=\"tags\" onSearch={handleTagSearch} onReset={handleTagReset}/>\n                    {tagListContent}\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default TagView;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        marginTop: '5px',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexGrow: 1,\n        paddingBottom: '50px'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        width: '90%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    tabContent: {\n        width: '60%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));","/**\n * Helper function to remove HTML tags surrounding text\n * @param string text\n * @returns string\n */\nexport const removeHtmlTags = (text: string): string => text.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n/**\n * Helper function to remove new lines\n * @param string text\n * @returns string\n */\nexport const removeNewLines = (text: string): string => text.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n\n/**\n * Helper function to remove special characters\n * @param string text\n * @returns string\n */\nexport const removeSpecialCharacters = (text: string): string => text.replace(/&(quot;|nbsp;|gt;|lt;)?/g, \"\");\n\n/**\n * Helper function to provide a substring, default is 70 characters\n * @param text \n */\nexport const getSubText = (text: string, count?:number): string => {\n    let len = count? count : 70;\n    const result = text.substr(0,len);\n    return `${result}...`;\n};\n\n/**\n * Helper function to remove special characters\n * @param string text\n * @returns string\n */\nexport const replaceAmpersand = (text: string): string => text.replace(/&(amp;)?/g, \"&\");\n\n","import React, { FunctionComponent } from 'react';\n// rich editor\nimport CKEditor from 'ckeditor4-react';\n// custom\nimport './ck-editor.css';\nimport { removeHtmlTags, removeNewLines, removeSpecialCharacters, replaceAmpersand } from '../../common/util/HelperFunctions';\n\ninterface IClassicEditorProps {\n    placeholder: string;\n    onEditorChange: (text: string, html: string) => void;\n}\n\nconst ClassicEditor: FunctionComponent<IClassicEditorProps> = (props): JSX.Element => {\n    const { placeholder, onEditorChange } = props;\n    // event handler\n    const handleEditorChange = ( evt: any ) =>{\n        const html: string =  evt.editor.getData();\n        let text: string = removeHtmlTags(html);\n        text = removeNewLines(text);\n        text = removeSpecialCharacters(text);\n        text = replaceAmpersand(text);\n        onEditorChange(text, html);\n    };\n\n    return <React.Fragment>\n\n        <CKEditor\n            className=\"editor\"\n            type=\"classic\"\n            onChange={handleEditorChange}\n            data={`<p>${placeholder}</p>`}/>\n\n    </React.Fragment>\n};\n\nexport default ClassicEditor;","import React, {useState, useContext, FunctionComponent, useEffect, useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {LinearLoader} from \"../../../components/loaders/linear-loader/LinearLoader\";\nimport ClassicEditor from '../../../components/editor/ClassicEditor';\nimport { ItemInterface } from '../common/item-interface';\nimport { addNewItem } from '../../../common/async/AsyncCalls';\n\n\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    editorContainer: {\n        width: '100%',\n        minWidth: 200,\n        border: '1px solid red'\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    validationText: {\n        color: 'red'\n    }\n});\n\ninterface IItemCreateProps {\n    onCreateItem: (action: string) => void;\n}\n\nconst ItemCreate: FunctionComponent<IItemCreateProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const { onCreateItem } = props;\n    // state\n    const [itemData, setItemData] = useState<ItemInterface>({\n        name: '',\n        description: '',\n        html: ''\n    });\n    const [isLoading, setLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n\n    // Lifecycle methods\n    const resetAllFields = useCallback(()=>{\n        setItemData({\n            name: '',\n            description: '',\n            html: ''\n        })\n    },[]);\n\n    const handleTitleChange = (event: any) => {\n        setItemData((prev: ItemInterface) => {return {...prev, name: event.target.value}});\n    };\n\n    const handleSubmit = () => {\n        setLoading(true);\n        const { name, description, html } = itemData;\n        if(name && description && html ) {\n            addNewItem({name, description, html})\n                .then((res: any) => {\n                    resetAllFields();\n                    return onCreateItem('success');\n                })\n                .catch((err: any) => onCreateItem('failure'))\n                .finally(()=> setLoading(false));\n        }\n    };\n\n    const handleEditorChange = (text: string, html: string) => {\n        setItemData((prev: ItemInterface) => {return {...prev, description: text, html }});\n    }\n    \n\n    const errorMsgText = () => <Typography className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        if (itemData.name !== '' && itemData.description !=='' ) setErrMsg(null);\n        else setErrMsg(`Please fill in missing fields`);\n    },[itemData]);\n\n    // render\n    return (\n        <Grid item xs={12} md={12}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Typography  variant=\"h5\" component=\"h2\">Create New Item / Category</Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        All Fields are required to be filled in*\n                    </Typography>\n                    {errorMsgText()}\n                    <LinearLoader display={isLoading}/>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        id=\"title\"\n                        label=\"Item Title\"\n                        name=\"title\"\n                        value = {itemData.name}\n                        autoFocus\n                        onChange={handleTitleChange}/>\n                        <ClassicEditor placeholder={'Enter Item Description!'} onEditorChange={handleEditorChange}/>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Button onClick={handleSubmit} disabled={!!errMsg} variant=\"contained\" size=\"medium\" color=\"primary\">Create Item</Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default ItemCreate;","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Card, CardActions, CardContent, Fab, Grid, Typography} from \"@material-ui/core\";\nimport {Skeleton} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst ItemListSkeleton: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Skeleton>\n                        <Typography variant=\"h5\" component=\"h2\">Loading Text Title, please...</Typography>\n                    </Skeleton>\n                    <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading Text subtitle..\n                        </Typography>\n                    </Skeleton>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Skeleton variant=\"circle\" width={40} height={40} />\n                    <Skeleton variant=\"circle\" width={40} height={40} />\n                </CardActions>\n            </Card>\n        </Grid>\n        );\n};\n\nexport default ItemListSkeleton;","import React, { FunctionComponent, useEffect, useState } from 'react';\n// material\nimport { \n    Avatar,\n    Button, Chip,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    RootRef,\n    Theme,\n    Tooltip,\n    Typography \n} from '@material-ui/core';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\n// custom\nimport { ItemInterface } from '../../../views/items/common/item-interface';\nimport { getSubText } from '../../../common/util/HelperFunctions';\n\n//styles\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    }\n}));\n\nexport const useStyles = makeStyles(theme => ({\n    content: {\n        width: '100%'\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    }\n}));\n\n\nconst ItemBadgeModal: FunctionComponent<ItemInterface> = (props): JSX.Element => {\n    const { name, description, html } = props;\n    const classes = useStyles();\n    const toolTipClasses = useStylesBootstrap();\n    const domRef = React.useRef(document.createElement('div'));\n    // states\n    const [isOpen, toggleOpen] = useState<boolean>(false);\n    // event handlers\n    const toggleModal = () => toggleOpen(prev => !prev);\n    \n    const createMarkup = () => {\n        return {__html: html};\n    };\n\n    return <React.Fragment>\n        <Tooltip\n            title={getSubText(description)}\n            arrow\n            placement=\"top\"\n            classes={toolTipClasses}>\n            <Chip\n                avatar={<Avatar><FastfoodIcon/></Avatar>}\n                label={name}\n                clickable\n                onClick={toggleModal}\n                color=\"primary\"/>\n        </Tooltip>\n        <Dialog\n            open={isOpen}\n            onClose={toggleModal}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\">{name}</DialogTitle>\n            <DialogContent>\n                <div className={classes.content} dangerouslySetInnerHTML={createMarkup()}>            \n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={toggleModal}\n                    color=\"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </React.Fragment>;\n};\n\nexport default ItemBadgeModal;","import React, { FunctionComponent } from \"react\";\n// material\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport {makeStyles} from \"@material-ui/core/styles\";\n// custom\nimport { ItemInterface } from \"../common/item-interface\";\nimport {useSnackbar} from \"notistack\";\nimport { getSubText } from \"../../../common/util/HelperFunctions\";\nimport ItemBadgeModal from \"../../../components/badges/item-badge/ItemBadgeModal\";\n\ninterface ItemInterfaceCardProps extends ItemInterface {\n    onEdit: (data: ItemInterface ) => void;\n    onDelete: (id: string) => void;\n}\n\n//styling\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    smallText: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 12,\n        color: theme.palette.primary.dark\n    },\n    action: {\n        display: 'flex',\n        // border: '1px solid red',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst ItemCard: FunctionComponent<ItemInterfaceCardProps> = (props):JSX.Element => {\n    const { name, description, html, onDelete, onEdit } = props;\n    const id = props.id? props.id: '';\n    const classes = useStyles();\n    const { enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    // add multiple actions to one snackbar\n    const action = (key: number) => (\n        <React.Fragment>\n            <Button onClick={() =>{\n                closeSnackbar(key);\n                onDelete(id);\n            }}>{'Yes'}</Button>\n            <Button onClick={() => { closeSnackbar(key); }}>{'No'}</Button>\n        </React.Fragment>\n    );\n\n    // event handlers\n    const handleEdit = () => {\n        onEdit({id, name, description, html });\n    };\n\n    const handleDelete = () => {\n        enqueueSnackbar(`Are you sure you want to delete this Item?`, {variant: 'warning', action});\n    };\n\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"h5\" component=\"h2\">{props.name}</Typography>\n                    <Typography className={classes.pos} component=\"p\">\n                        {getSubText(props.description)}\n                    </Typography>\n                    <ItemBadgeModal name={name} description={description} html={html}/>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Fab\n                        className={classes.fab}\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"Update\"\n                        onClick={handleEdit}>\n                        <EditIcon />\n                    </Fab>\n                    <Fab\n                        className={classes.fab}\n                        size=\"small\"\n                        aria-label=\"Delete\"\n                        onClick={handleDelete}>\n                        <DeleteIcon />\n                    </Fab>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default ItemCard;\n","import React, {FunctionComponent, useEffect, useState} from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\n// custom\nimport { ItemInterface } from \"../common/item-interface\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from \"@material-ui/core\";\nimport { LinearLoader } from \"../../../components/loaders/linear-loader/LinearLoader\";\nimport { updateItemById, updateTagById } from \"../../../common/async/AsyncCalls\";\nimport ClassicEditor from \"../../../components/editor/ClassicEditor\";\n\ninterface ItemInterfaceModalProps {\n    isOpen: boolean;\n    data: ItemInterface;\n    onModalClose: (status: boolean, value: 'success' | 'failure' | 'cancel') => void;\n}\n\nexport const useStyles = makeStyles(theme => ({\n    validationText: {\n        color: 'red'\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    }\n}));\n\nconst ItemUpdateModal: FunctionComponent<ItemInterfaceModalProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const { isOpen, data } = props;\n    \n    const id = data.id ? data.id : '';\n    // states\n    const [itemData, setItemData] = useState<ItemInterface>({\n        name: '',\n        description: '',\n        html: ''\n    });\n    const [isLoading, setLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n\n    // event handlers\n    const handleClose = ()=>{\n        props.onModalClose(false, 'cancel');\n    };\n\n    const handleSubmit = () => {\n        setLoading(true);\n        // console.log('Change details are: ', groupName, groupDescription, groupSlug, isChecked);\n        if(itemData.name && itemData.description) {\n            // console.log('Updated value is: ', id, itemData.name, itemData.description, itemData.html);\n            setLoading(true);\n            updateItemById(id, {\n                name: itemData.name,\n                description: itemData.description,\n                html: itemData.html\n            })\n                .then( res => {\n                    setLoading(false);\n                    props.onModalClose(false, 'success');\n                }, err => {\n                    setLoading(false);\n                    console.log('Error updating tag record: ', err);\n                    props.onModalClose(false, 'failure');\n                });\n        }\n        setLoading(false);\n    };\n\n    const handleNameChange = (event: any) => {\n        setItemData((prev: ItemInterface) => {return {...prev, name: event.target.value}});\n    };\n\n    const handleEditorChange = (text: string, html: string) => {\n        setItemData((prev: ItemInterface) => {return {...prev, description: text, html }});\n    };\n\n    const getErrorMsgText = (): JSX.Element => <Typography\n        className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        // console.log('Modal value is: ', itemData);\n        if (itemData.name !== '' && itemData.description !=='' ) setErrMsg(null);\n        else setErrMsg(`Please fill in missing fields`);\n    },[itemData]);\n\n    return (\n        <Dialog\n            open={isOpen}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\">{\"Update Tag Details\"}</DialogTitle>\n            <DialogContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    All Fields are required to be filled in*\n                </Typography>\n                {getErrorMsgText()}\n                <LinearLoader display={isLoading}/>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    id=\"title\"\n                    label=\"Item Name\"\n                    name=\"name\"\n                    defaultValue = {data.name}\n                    autoFocus\n                    onBlur={handleNameChange}/>\n                <ClassicEditor placeholder={data.html} onEditorChange={handleEditorChange}/>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={!!errMsg}\n                    onClick={handleSubmit}\n                    variant=\"contained\"\n                    color=\"primary\">\n                    Update\n                </Button>\n                <Button\n                    onClick={handleClose.bind('cancel')}\n                    color=\"primary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n}\n\nexport default ItemUpdateModal;","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\n// styling\nimport { useStyles } from './item.view.style';\nimport { CssBaseline, Grid } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport CloseActionButton from \"../../components/notifications/CloseActionButton\";\nimport ItemCreate from \"./create/ItemCreate\";\nimport ItemSearch from \"./search/ItemSearch\";\nimport ItemListSkeleton from \"./loading/ItemListSkeleton\";\nimport { deleteItemById, getAllItems, searchByText } from '../../common/async/AsyncCalls';\nimport { ItemInterface } from './common/item-interface';\nimport ItemCard from './card/ItemCard';\nimport SearchCard from '../../components/search/SearchCard';\nimport { ISearch } from '../../components/search/search-interface';\nimport EmptySearchCard from '../../components/card/404/EmptySearchCard';\nimport ItemUpdateModal from './update/ItemUpdateModal';\n\nconst ItemView: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    const { enqueueSnackbar} = useSnackbar();\n    const getDefaultListContent = (): JSX.Element => <React.Fragment>\n            <ItemListSkeleton/>\n            <ItemListSkeleton/>\n            <ItemListSkeleton/>\n    </React.Fragment>;\n    // states\n    const [itemListContent, setItemListContent] = useState<JSX.Element>(getDefaultListContent());\n    const [isModal, setModal] = useState<boolean>(false);\n    const [itemModalData, setItemModalData] = useState<ItemInterface>({\n        id: '',\n        name: '',\n        description: '',\n        html: ''\n    });\n    // notificationBox action - OK\n    const okActionButton = (key: number) => (\n        <CloseActionButton keyObj={key}/>\n    );\n\n    // event handlers\n    const handleItemEdit = (data: ItemInterface) => {\n        console.log('Item to edit', data);\n        setItemModalData(data);\n        setModal(true);\n    };\n\n    const handleItemDelete = (id: string) => {\n        deleteItemById(id)\n            .then((res: any) => {\n                enqueueSnackbar(`Group record deleted !`, {variant: 'info', action: okActionButton });\n                return fetchAllItems();\n            })\n            .catch((err: any) => enqueueSnackbar(`Error deleting Group record...`,\n                {variant: 'error', action: okActionButton }))\n    };\n\n    // lifecycle methods\n    const fetchAllItems = useCallback(()=>{\n        setItemListContent(getDefaultListContent());\n        getAllItems()\n            .then((res: any) => {\n                if (res.data.length > 0) {\n                    // console.log('Item list is: ', res.data);\n                    const list: JSX.Element[] = res.data?.map((item: any, index:number) => <ItemCard\n                            key={index}\n                            onEdit={handleItemEdit}\n                            onDelete={handleItemDelete}\n                            id={item._id}\n                            name={item.name}\n                            description={item.description}\n                            html={item.html}/>\n                        );\n                        setItemListContent(<React.Fragment>\n                            {list}\n                        </React.Fragment>);\n                } else {\n                    setItemListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            }).catch((err: any) => console.log('Error fetching data: ', err));\n    },[]);\n\n    // event handlers\n    const handleItemCreate = (action: string) => {\n        // console.log('Action was a: ', action);\n        if(action === 'success') {\n            enqueueSnackbar(`Item record created !`, {variant: 'info', action: okActionButton });\n            return fetchAllItems();\n        } else if (action === 'failure') {\n            enqueueSnackbar(`Error creating Item record...`, {variant: 'error', action: okActionButton });\n        }\n    };\n\n    const handleItemSearch = (data: ISearch) => {\n        setItemListContent(getDefaultListContent())\n        searchByText(data)\n            .then((res: any) => {\n                // console.log('Search Result is: ', res.data);\n                if (res.data.length > 0) {\n                    const list: JSX.Element[] = res.data?.map((item: any, index:number) => <ItemCard\n                        key={index}\n                        onEdit={handleItemEdit}\n                        onDelete={handleItemDelete}\n                        id={item._id}\n                        name={item.name}\n                        description={item.description}\n                        html={item.html}/>\n                    );\n                    setItemListContent(<React.Fragment>\n                        {list}\n                    </React.Fragment>);\n                } else {\n                    setItemListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            }).catch((err: any) => console.log('Error fetching data: ', err));\n    };\n\n    const handleItemReset = () => {\n        fetchAllItems();\n    };\n\n    const handleItemModalClose = (status: boolean, value: 'success' | 'failure' | 'cancel') => {\n        // console.log('Modal status is: ', status);\n        if (value === 'success') {\n            enqueueSnackbar(`Tag record updated !`, {variant: 'info', action: okActionButton });\n        } else if (value === 'failure') {\n            enqueueSnackbar(`Error updating Tag record...`, {variant: 'error', action: okActionButton });\n        }\n        setModal(status);\n        return fetchAllItems();\n    };\n\n    // component did mount\n    useEffect(()=>{\n        fetchAllItems();\n    },[]);\n\n    return (\n        <div className = {classes.root}>\n            <CssBaseline />\n            <div className={classes.cardContent}>\n                <Grid container spacing={1}>\n                    <ItemCreate onCreateItem={handleItemCreate}/>\n                    <SearchCard table=\"items\" onSearch={handleItemSearch} onReset={handleItemReset}/>\n                    {itemListContent}\n                    <ItemUpdateModal isOpen={isModal} data={itemModalData} onModalClose={handleItemModalClose}/>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default ItemView;","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(11),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        color: theme.palette.secondary.main\n    },\n    autocomplete: {\n        marginTop: 25,\n        marginBottom: 25\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(10),\n        color: theme.palette.text.secondary,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    debug: {\n        border: '1px solid red'\n    },\n    card: {\n        minWidth: 175,\n        marginTop: 5,\n        marginBottom: 25\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    validationText: {\n        color: 'red'\n    }\n}));","import React, { FunctionComponent, useEffect, useState } from 'react';\n// material\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Card, CardActions, CardContent, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\n// custom\nimport { IRecipe } from '../../common/recipe-interfaces';\nimport ClassicEditor from '../../../../components/editor/ClassicEditor';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useStyles } from './recipe-form.style';\n\ninterface IRecipeForm {\n    data: IRecipe;\n    groupDropdownList: any[];\n    tagDropdownList: any[];\n    itemDropdownList: any[];\n    onSubmit: (data: IRecipe) => void;\n}\n\nconst RecipeForm: FunctionComponent<IRecipeForm> = (props):JSX.Element => {\n    // props\n    const { data, onSubmit, groupDropdownList, tagDropdownList, itemDropdownList } = props;\n    const tagsData = data.tags ? data.tags : [];\n    const itemsData = data.items ? data.items : [];\n    const htmlData = data.html !=='' ? data.html : '<p>Enter your recipe description here**</p>';\n    // states\n    const [expanded, setExpanded] = React.useState<string | false>(false);\n    const [recipeTitle, setRecipeTitle] = useState<string>(data.title);\n    const [editorData, setEditorData] = useState<{text: string, html: string}>({text: data.content, html: htmlData});\n    const [recipeLink, setRecipeLink] = useState(data.link);\n    const [selectedGroup, setSelectedGroup] = useState<any | null>(data.group? data.group : null);\n    // const [selectedTags, setSelectedTags] = React.useState<any[]>([tagDropdownList[0], tagDropdownList[1]]);\n    const [selectedTags, setSelectedTags] = React.useState<any[]>(populateList(tagsData, tagDropdownList));\n    const [selectedItems, setSelectedItems] = useState<any[]>(populateList(itemsData, itemDropdownList));\n    const [privateValue, setPrivateValue] = useState<any | null>(null);\n    const [errMsg, setErrMsg] = useState<string | null>('');\n    //classes\n    const classes = useStyles();\n\n    // lifecycle methods\n    function populateList (propList: any[], optionsList: any[]) {\n        if (propList.length == 0) {\n            return [];\n        } else {\n            const filteredList = optionsList.filter((el: any) => {\n                return propList.some((item: any) => {\n                  return item._id === el._id;\n                });\n            });\n            return filteredList;\n        }\n    }\n\n    const checkValidYoutubeUrl = (text: string): boolean => {\n        return (/^(https?:\\/\\/)?((www\\.)?youtube\\.com|youtu\\.?be)(\\/)?.+$/.test(text)) ? true : false;\n    };\n\n    const privacyOptionsList = ():any[] => {\n        return [{name: 'is Private', value: true}, {name: 'is Public', value: false}];\n    };\n\n    // event handlers\n    const handleChange = (event: any) => {\n        if (event.target.name === 'title') {\n            setRecipeTitle(event.target.value);\n        } else if (event.target.name === 'group') {\n            setSelectedGroup(event.target.value);\n        } else if (event.target.name === 'private') {\n            setPrivateValue(event.target.value);\n        } else if (event.target.name === 'link') {\n            setRecipeLink(event.target.value);\n            if (event.target.value !== '' && !checkValidYoutubeUrl(event.target.value)) {\n                setErrMsg('Invalid Youtube Link');\n            } else {\n                setErrMsg('');\n            }\n        }\n    };\n\n    const handleAccordianChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n      };\n\n    const handleSubmit = () => {\n            onSubmit({\n                title: recipeTitle,\n                link: recipeLink,\n                isPrivate: privateValue.value,\n                content: editorData.text,\n                html: editorData.html,\n                group: selectedGroup,\n                tags: selectedTags,\n                items: selectedItems,\n                timers: []\n            });\n    };\n\n    const handleEditorChange = (text: string, html: string) => {\n        setEditorData({text, html});\n    };\n\n    const handleGroupSelect = (event: any, newInputValue: any) => {\n        console.log('New Input value is: ', newInputValue);\n        setSelectedGroup(newInputValue);\n    };\n\n    const handlePrivacySelect = (event: any, newInputValue: any) => {\n        setPrivateValue(newInputValue);\n    };\n\n    const handleTagSelect = (event: any, newInputValue: any) => {\n        setSelectedTags(newInputValue);\n    };\n\n    const handleItemSelect = (event: any, newInputValue: any) => {\n        setSelectedItems(newInputValue);\n    };\n\n    const errorMsgText = () => <Typography className={classes.validationText} component=\"p\">\n        {errMsg}\n    </Typography>;\n\n    useEffect(()=>{\n        if (recipeTitle !== '' && editorData.html !=='' && selectedGroup && privateValue) {\n            setErrMsg('');\n        } else {\n            setErrMsg('Fill all the mandatory fields!');\n        }\n    },[recipeTitle, editorData, selectedGroup, privateValue]);\n\n    return <React.Fragment>\n        <Card className={classes.card}>\n            <CardContent>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} md={12}>\n                        {errorMsgText()}\n                        <TextField margin=\"normal\" variant=\"outlined\" required fullWidth id=\"title\" label=\"Recipe Title\" name=\"title\"\n                            value={recipeTitle} autoFocus onChange={handleChange} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Autocomplete \n                            value={selectedGroup} \n                            id=\"groups-outlined\"\n                            onChange={handleGroupSelect}\n                            options={groupDropdownList}\n                            getOptionLabel={(option)=> option.title}\n                            filterSelectedOptions\n                            renderInput={(params) => (\n                            <TextField {...params} variant=\"outlined\" label=\"Select Group*\"\n                                placeholder=\"Group\" />\n                            )}/>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Autocomplete \n                            value={privateValue} \n                            id=\"groups-outlined\"\n                            onChange={handlePrivacySelect}\n                            options={privacyOptionsList()}\n                            getOptionLabel={(option)=> option.name}\n                            filterSelectedOptions\n                            renderInput={(params) => (\n                            <TextField {...params} variant=\"outlined\" label=\"Recipe type*\"\n                                placeholder=\"Type\" />\n                            )}/>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Accordion expanded={expanded==='panel1' } onChange={handleAccordianChange('panel1')}>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                            >\n                            <Typography className={classes.heading}>Additional Info</Typography>\n                            <Typography className={classes.secondaryHeading}>These fields are optional.\n                                But filling them up, helps in better search results</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid item xs={12} md={12}>\n                                <Grid className={classes.autocomplete} item xs={12} md={12}>\n                                    <Autocomplete \n                                        value={selectedTags}\n                                        multiple \n                                        id=\"tags-outlined\"\n                                        onChange={handleTagSelect}\n                                        options={tagDropdownList}\n                                        getOptionLabel={(option)=> option.name}\n                                        filterSelectedOptions\n                                        renderInput={(params) => (\n                                        <TextField {...params} variant=\"outlined\" label=\"Select Tags\"\n                                            placeholder=\"Tags\" />\n                                        )}/>\n                                </Grid>\n                                <Grid className={classes.autocomplete} item xs={12} md={12}>\n                                    <Autocomplete \n                                        value={selectedItems}\n                                        multiple \n                                        id=\"items-outlined\"\n                                        onChange={handleItemSelect}\n                                        options={itemDropdownList}\n                                        getOptionLabel={(option)=> option.name}\n                                        filterSelectedOptions\n                                        renderInput={(params) => (\n                                        <TextField {...params} variant=\"outlined\" label=\"Select Items\"\n                                            placeholder=\"Items\" />\n                                        )}/>\n                                </Grid>\n                                <Grid item xs={12} md={12}>\n                                    <TextField variant=\"outlined\" margin=\"normal\" fullWidth id=\"link\" label=\"Youtube Link\" name=\"link\"\n                                        value={recipeLink} onChange={handleChange} />\n                                </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <ClassicEditor placeholder={htmlData} onEditorChange={handleEditorChange} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions className={classes.action}>\n                <Button onClick={handleSubmit} disabled={!!errMsg} variant=\"contained\" size=\"medium\"\n                    color=\"primary\">Submit</Button>\n            </CardActions>\n        </Card>\n    </React.Fragment>\n};\n\nexport default RecipeForm;","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Card, CardActions, CardContent, Fab, Grid, Typography} from \"@material-ui/core\";\nimport {Skeleton} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        minWidth: 175,\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    cardContent: {\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    box: {\n        width: '100%'\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst RecipeFormSkeleton: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <Grid>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Grid item xs={12} md={12}>\n                        <Skeleton>\n                            <Typography className={classes.fullWidth} \n                                variant=\"h5\" component=\"h2\">Loading Text Title. \n                                This is a long text,\n                                This might take some time...</Typography>\n                        </Skeleton>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Skeleton>\n                            <Typography className={classes.fullWidth} \n                                variant=\"h5\" component=\"h2\">Loading Text Title.</Typography>\n                        </Skeleton>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Skeleton>\n                            <Typography className={classes.fullWidth} \n                                variant=\"h5\" component=\"h2\">Loading Text Title. \n                                This might take some time...</Typography>\n                        </Skeleton>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Skeleton>\n                            <Typography className={classes.fullWidth} \n                                variant=\"h5\" component=\"h2\">Loading Text Title. \n                                This is a long text,\n                                This might take some time...</Typography>\n                        </Skeleton>\n                    </Grid>\n                    <Skeleton variant=\"rect\" className={classes.box} height={200}/>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Skeleton variant=\"rect\" width={140} height={40} />\n                </CardActions>\n            </Card>\n        </Grid>\n        );\n};\n\nexport default RecipeFormSkeleton;","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from \"notistack\";\n// material\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport { addNewRecipe, getAllGroups, getAllItems, getAllTags } from '../../../common/async/AsyncCalls';\nimport { LinearLoader } from '../../../components/loaders/linear-loader/LinearLoader';\nimport { IRecipe } from '../common/recipe-interfaces';\nimport RecipeForm from '../components/form/RecipeForm';\nimport RecipeFormSkeleton from '../loading/RecipeFormSkeleton';\nimport CloseActionButton from '../../../components/notifications/CloseActionButton';\nimport { DASHBOARD_ROUTES, useDashboardRouteDispatch } from '../../../layouts/dashboard/router/DashboardRouterContext';\n// styles\nconst useStyles = makeStyles(theme => ({\n    container: {\n        width: '95%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}));\n\nconst RecipeAddView: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    const { enqueueSnackbar} = useSnackbar();\n    const dashboardRouterDispatch: any = useDashboardRouteDispatch();\n    // states\n    const [title, setTitle] = useState('Loading Form...');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [formContent, setFormContent] = useState<JSX.Element>(<RecipeFormSkeleton/>);\n    // notificationBox action - OK\n    const okActionButton = (key:number) => (\n        <CloseActionButton keyObj={key} />\n    );\n    \n    const getDefaultData = ():IRecipe => {\n        return {\n            title: '',\n            link: '',\n            isPrivate: false,\n            content: '',\n            html: '',\n            group: null,\n            tags: [],\n            items: [],\n            timers: [],\n        };\n    };\n\n    // lifecycle methods\n    const fetchAllDropdowns = useCallback(()=>{\n        const promiseList: any[] = [getAllGroups(), getAllTags(), getAllItems()];\n        Promise.all(promiseList)\n            .then((res: any) => {\n                if (res && res.length > 2) {\n                    setFormContent(\n                        <RecipeForm\n                            data={getDefaultData()}  \n                            groupDropdownList={res[0].data}\n                            tagDropdownList={res[1].data}\n                            itemDropdownList={res[2].data}\n                            onSubmit={handleFormSubmit}/>\n                    );\n                }\n            })\n            .catch((err: any) => console.log('Error fetching data: ', err))\n            .finally(()=> {setLoading(false); setTitle(`Create New Recipe`)});\n    },[]);\n\n    // event handlers\n    const handleFormSubmit = (data: IRecipe) => {\n        setLoading(true);\n        // console.log('New Recipe form data is: ', data);\n        const group = data.group._id;\n        const tags = data.tags?.map((item: any) => item._id);\n        const items = data.items?.map((item: any) => item._id);\n        addNewRecipe({\n            title: data.title,\n\t        link: data.link,\n\t        isPrivate: data.isPrivate,\n\t        content: data.content,\n\t        html: data.html,\n\t        group: group,\n\t        tags: tags,\n\t        items: items,\n\t        timers: []\n        })\n        .then((res: any) => {\n            enqueueSnackbar(`New Recipe Added!`, {variant: 'info', action: okActionButton });\n            dashboardRouterDispatch ({\n                type: DASHBOARD_ROUTES.MY_RECIPES\n            });\n        })\n        .catch((err: any) => {\n            console.log(`Error creating new recipe..`, err);\n            enqueueSnackbar(`Error creating Recipe / Duplicate Recipe Title!`, \n                {variant: 'error', action: okActionButton });\n        })\n        .finally(() => {\n            setLoading(false);\n            setTitle(`Create New Recipe`);\n        });\n    };\n\n    useEffect(()=>{\n        fetchAllDropdowns();\n    },[]);\n\n    return <React.Fragment>\n        <Grid className={classes.container} container spacing={1}>\n            <Typography variant=\"h5\" component=\"h2\">{title}</Typography>\n            <LinearLoader display={isLoading}/>\n                {formContent}\n        </Grid>\n        </React.Fragment>;\n};\n\nexport default RecipeAddView;","import React, { FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Card, CardActions, CardContent, Grid, Typography} from \"@material-ui/core\";\nimport {Skeleton} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    row: {\n        display: 'flex',\n        '&>*': {\n            margin: 5\n        }\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst RecipeListSkeleton: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <Grid item xs={12} md={4}>\n            <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                    <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading Text subtitle..\n                        </Typography>\n                    </Skeleton>\n                    <Skeleton>\n                        <Typography variant=\"h5\" component=\"h2\">Loading Text Title, please...</Typography>\n                    </Skeleton>\n                    <div className={classes.row}>\n                        <Skeleton>\n                            <Typography className={classes.pos} component=\"p\">\n                                Loading..\n                            </Typography>\n                        </Skeleton>\n                        <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading..\n                        </Typography>\n                    </Skeleton>\n                    <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading..\n                        </Typography>\n                    </Skeleton>\n                    </div>\n                    <Skeleton>\n                        <Typography className={classes.pos} component=\"p\">\n                            Loading..\n                        </Typography>\n                    </Skeleton>\n                </CardContent>\n                <CardActions className={classes.action}>\n                    <Skeleton variant=\"rect\" width={140} height={40} />\n                </CardActions>\n            </Card>\n        </Grid>\n        );\n};\n\nexport default RecipeListSkeleton;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        marginTop: '5px',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexGrow: 1,\n        padding: 10,\n        paddingBottom: '50px'\n    },\n    fullWidth: {  \n        position: 'relative',\n        padding: 5,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    panel: {\n        padding: '0 10px'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        width: '90%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    tabContent: {\n        width: '60%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));","import React, {FunctionComponent, useState} from 'react';\n// material\nimport {Theme} from \"@material-ui/core/styles\";\nimport {Avatar, Chip, makeStyles, Tooltip} from \"@material-ui/core\";\n//styles\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    }\n}));\n\ninterface ISmallBadgeProps {\n    name: string;\n    description: string;\n    color?: 'primary' | 'secondary';\n}\n\nconst SmallBadge: FunctionComponent<ISmallBadgeProps> = (props): JSX.Element => {\n    const classes = useStylesBootstrap();\n    const { name, description, color } = props;\n    \n    return <React.Fragment>\n        <Tooltip\n            title={description}\n            arrow\n            placement=\"top\"\n            classes={classes}>\n            <Chip\n                size=\"small\"\n                label={name}\n                clickable/>\n        </Tooltip>\n    </React.Fragment>\n}\n\nexport default SmallBadge;","import React, { FunctionComponent } from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n// custom\nimport {IRecipe} from \"../common/recipe-interfaces\";\nimport SimpleBadge from \"../../../components/badges/simple/SimpleBadge\";\nimport { getSubText } from \"../../../common/util/HelperFunctions\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport SmallBadge from \"../../../components/badges/simple/SmallBadge\";\n\ninterface ISimpleRecipeCardProps extends IRecipe {\n    onView: (id: string) => void;\n}\n\n//styles\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    row: {\n        padding: 5,\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        '&>div': {\n            margin: 5\n        },\n        '&>div:nth-child(1)': {\n            marginLeft: 0\n        }\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    smallText: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 12,\n        color: theme.palette.primary.dark\n    },\n    action: {\n        display: 'flex',\n        // border: '1px solid red',\n        justifyContent: 'space-between'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst SimpleRecipeCard: FunctionComponent<ISimpleRecipeCardProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const { title, content, group, onView } = props;\n    const createdBy = props.createdBy ? props.createdBy : null;\n    const id = props.id? props.id: '';\n    const tags: any[] = props.tags? props.tags : [];\n\n    const tagContent = tags.length > 0 && tags.map((item: any, index: number) => <SimpleBadge key={index} name={item.name} description={item.description} />);\n\n    return  <Grid item xs={12} md={4}>\n        <Card className={classes.card}>\n                 <CardActionArea onClick={()=>onView(id)}>\n            <CardContent className={classes.cardContent}>\n                    <Typography variant=\"h5\" component=\"h2\">{title}</Typography>\n                    <Typography className={classes.pos} component=\"p\">\n                        {getSubText(content)}\n                    </Typography>\n            </CardContent>\n                </CardActionArea>\n                <div className={classes.row}>\n                    {tagContent}\n                </div>\n            <CardActions className={classes.action}>\n                <SmallBadge name={group.title} description={group.description} color={'primary'}/>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"read\"\n                    onClick={()=>onView(id)}>\n                     View...\n                </Button>\n            </CardActions>\n        </Card>\n    </Grid>\n}\n\nexport default SimpleRecipeCard;","import React, { FunctionComponent } from 'react';\n// material-ui\nimport { Button, ButtonGroup, Grid, makeStyles } from '@material-ui/core';\n\ninterface IRecipePanelProps {\n    onPanelChange: (id: number) => void;\n}\n\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexGrow: 1,\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    panel: {\n        padding: '0 10px'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));\n\nconst RecipePanel: FunctionComponent<IRecipePanelProps> = (props): JSX.Element => {\n    const { onPanelChange } = props;\n    const classes = useStyles();\n    return <React.Fragment>\n            <ButtonGroup className={classes.panel} color=\"primary\" aria-label=\"outlined primary button group\">\n                <Button onClick={onPanelChange.bind(null, 1)}>Card</Button>\n                <Button onClick={onPanelChange.bind(null, 2)}>List</Button>\n            </ButtonGroup>\n    </React.Fragment>;\n};\n\nexport default RecipePanel;","import React, { FunctionComponent } from 'react';\nimport { Card, CardActionArea, CardContent, makeStyles, Typography } from '@material-ui/core';\nimport { getSubText } from '../../../../common/util/HelperFunctions';\n\nexport const useStyles = makeStyles(theme => ({\n    column: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        padding: 5,\n        paddingRight: 10,\n        flexDirection: 'column'\n    },\n    boldTitle: {\n        fontWeight: 'bold',\n        marginTop: 5\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n        marginBottom: 5\n    },\n    cardContent: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    text: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}));\n\ninterface ILetter {\n    letter: \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\" | \"j\" | \"k\" | \"l\" | \n    \"m\" | \"n\" | \"o\" | \"p\" | \"q\" | \"r\" | \"s\" | \"t\" | \"u\" | \"v\" | \"w\" | \"x\" | \"y\" | \n    \"z\" | \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n    value: any[];\n}\n\ninterface IRecipeCollectionProps {\n    list: ILetter[];\n    onView: (id: string) => void;\n}\n\nconst listReducer = (list: ILetter[], data: any) => {\n    if (list.length > 0) {\n        const temp = list.filter((item: ILetter) => item.letter === data.title?.charAt(0));\n        if (temp.length > 0) { temp[0].value.push(data);\n        } else {\n            list.push({\n                letter: data.title?.charAt(0),\n                value: [data]\n            });\n        }\n    } else {\n        list.push({\n            letter: data.title?.charAt(0),\n            value: [data]\n        });\n    }\n    return list;\n};\n\n\nexport const mapChronologicalList = (list: any[]): ILetter[] => {\n    let initialState: ILetter[] = [];\n    const result: ILetter[] = list.reduce(listReducer, initialState);\n    if (result.length > 0) return result.sort((a: ILetter, b:ILetter) => a.letter.localeCompare(b.letter));\n    else return [];\n};\n\n\nexport const RecipeCollection: FunctionComponent<IRecipeCollectionProps> = (props): JSX.Element => {\n    const { list, onView } = props;\n    const classes = useStyles();\n    const listContent = (list:ILetter[]):JSX.Element[]  => {\n        const content: JSX.Element[] = [];\n        list.map((item: ILetter, index: number) => {\n            content.push(<Typography key={index} component=\"h6\" className={classes.boldTitle}>\n                {item.letter.toUpperCase()}\n            </Typography>);\n            {item.value.map((recipe: any, index01: number) => {\n                return content.push(\n                    <Card key={`${index}-${index01}`} className={classes.card}>\n                        <CardActionArea onClick={()=>onView(recipe._id)}>\n                        <CardContent className={classes.cardContent}>\n                            <div className={classes.text}>\n                                <Typography component=\"p\" variant=\"subtitle1\"><strong>\n                                    {recipe.title}\n                                    </strong></Typography>\n                                <Typography component=\"p\" variant=\"subtitle2\">{getSubText(recipe.content)}</Typography>\n                            </div>\n                        </CardContent>\n                        </CardActionArea>\n                    </Card>\n                );\n            })}\n        });\n        return content;\n    };\n\n    // console.log(`Sorted List is: `, list);\n    return <React.Fragment>\n        <div className={classes.column}>\n            {listContent(list)}\n        </div>\n        </React.Fragment>;\n};","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// material\nimport { CssBaseline, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\n// custom\nimport { getAllPublicRecipes, getAllRecipesByGroupId } from '../../../common/async/AsyncCalls';\nimport RecipeListSkeleton from '../loading/RecipeListSkeleton';\nimport { useStyles } from './recipe-list.view.styles';\nimport EmptySearchCard from '../../../components/card/404/EmptySearchCard';\nimport SimpleRecipeCard from '../card/SimpleRecipeCard';\nimport { DASHBOARD_ROUTES, useDashboardRouteDispatch } from '../../../layouts/dashboard/router/DashboardRouterContext';\nimport RecipePanel from './panels/RecipePanel';\nimport {mapChronologicalList, RecipeCollection} from '../components/collection/RecipeCollection';\n\n\nconst RecipeListView: FunctionComponent = (props): JSX.Element => {\n    const { id } = useParams();\n    const classes = useStyles();\n    const dispatchDashboard: any = useDashboardRouteDispatch();\n    // default card content\n    const defaultCardContent = (): JSX.Element => {\n        return <React.Fragment>\n            <RecipeListSkeleton/>\n            <RecipeListSkeleton/>\n            <RecipeListSkeleton/>\n            <RecipeListSkeleton/>\n            <RecipeListSkeleton/>\n        </React.Fragment>;\n    };\n    // states\n    const [recipeListContent, setRecipeListContent] = useState<JSX.Element>(defaultCardContent());\n    const [title, setTitle] = useState<string>('All Recipes');\n    const [panelState, setPanelState] = useState<number>(1);\n    const [recipeList, setRecipeList] = useState<any[]>([]);\n\n    // event handlers\n    const handleView = useCallback((id: string) => {\n        // console.log('Card detail to see: ', id);\n        dispatchDashboard ({\n            type: DASHBOARD_ROUTES.PREVIEW_RECIPE,\n            payload: id\n        });\n    },[dispatchDashboard]);\n\n    const handlePanelChange = (panelNumber: number) => {\n        setPanelState(panelNumber);\n    }\n    \n    //lifecycle methods\n    const fetchRecipesOfType = useCallback((id: string)=>{\n        setRecipeListContent(defaultCardContent());\n        let asyncFetch = getAllPublicRecipes();\n        if (id === 'all') setTitle('All Recipes') \n        else setTitle('Loading...');\n        switch(id) {\n            case 'all':\n                asyncFetch = getAllPublicRecipes();\n                break;\n            default:\n                asyncFetch = getAllRecipesByGroupId(id);\n        }\n        asyncFetch\n            .then((res: any) => {\n                if (res.data.length > 0) {\n                    if (id !== 'all') setTitle(`${res.data[0].group.title}`);\n                    setRecipeList(res.data);\n                } else {\n                    setRecipeListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            })\n            .catch((err: any) => console.log('Error fetching: ', err));\n    },[]);\n\n    useEffect(()=>{\n        if (recipeList.length > 0 && panelState === 1) {\n            const sortedList = recipeList.sort((a: any, b: any) => {\n                const date1 = new Date(a?.created);\n                const date2 = new Date(b?.created);\n                return date2.getTime() - date1.getTime();\n            });\n            const list: JSX.Element[] = sortedList?.map((el: any, index:number) => <SimpleRecipeCard\n                        key={index}\n                        onView={handleView}\n                        id = {el._id}\n                        title = {el.title}\n                        link = {el.link}\n\t                    isPrivate = {el.isPrivate}\n\t                    content = {el.content}\n\t                    html = {el.html}\n\t                    group = {el.group}\n\t                    createdBy = {el.createdBy}\n\t                    tags = {el.tags}\n\t                    items = {el.items}\n\t                    timers = {el.timers}\n                        />\n                    );\n                    setRecipeListContent(<React.Fragment>\n                        {list}\n                    </React.Fragment>);\n        } else if (recipeList.length > 0 && panelState === 2) {\n            setRecipeListContent(<RecipeCollection \n                list={mapChronologicalList(recipeList)} \n                onView={handleView}/>);\n        } else {\n            setRecipeListContent(<EmptySearchCard type=\"empty\"/>);\n        }\n    },[recipeList, handleView, panelState]);\n    \n\n    //component did mount\n    useEffect(()=>{\n        // console.log('List recipe type: ', id);\n        fetchRecipesOfType(id);\n    },[fetchRecipesOfType, id]);\n\n    return <React.Fragment>\n        <div className = {classes.root}>\n            <CssBaseline />\n        <Grid container spacing={1}>\n            <div className={classes.fullWidth}>\n                <Typography variant=\"h5\" component=\"h2\">{title}</Typography>\n                <RecipePanel onPanelChange={handlePanelChange}/>\n            </div>\n            {recipeListContent}\n        </Grid>\n        </div>\n    </React.Fragment>;\n};\n\nexport default RecipeListView;","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from \"notistack\";\nimport { useParams } from \"react-router-dom\";\n// material\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport { addNewRecipe, getAllGroups, getAllItems, getAllTags, getRecipeById, updateRecipeById } from '../../../common/async/AsyncCalls';\nimport { LinearLoader } from '../../../components/loaders/linear-loader/LinearLoader';\nimport { IRecipe } from '../common/recipe-interfaces';\nimport RecipeForm from '../components/form/RecipeForm';\nimport RecipeFormSkeleton from '../loading/RecipeFormSkeleton';\nimport CloseActionButton from '../../../components/notifications/CloseActionButton';\nimport { DASHBOARD_ROUTES, useDashboardRouteDispatch } from '../../../layouts/dashboard/router/DashboardRouterContext';\n// styles\nconst useStyles = makeStyles(theme => ({\n    container: {\n        width: '95%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}));\n\nconst RecipeUpdateView: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    const dashboardDispatch: any = useDashboardRouteDispatch();\n    const { id } = useParams();\n    const { enqueueSnackbar} = useSnackbar();\n    // states\n    const [title, setTitle] = useState('Loading Form...');\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const [formContent, setFormContent] = useState<JSX.Element>(<RecipeFormSkeleton/>);\n    // notificationBox action - OK\n    const okActionButton = (key:number) => (\n        <CloseActionButton keyObj={key} />\n    );\n    \n    const getDefaultData = (data: any):IRecipe => {\n        const result = data && data.length>0 && data[0];\n        // console.log('Recipe data to populate: ', result);\n        return {\n            title: result.title,\n            link: result.link,\n            isPrivate: result.isPrivate,\n            content: result.content,\n            html: result.html,\n            group: result.group,\n            tags: result.tags,\n            items: result.items,\n            timers: result.timers,\n        };\n    };\n\n    // lifecycle methods\n    const fetchAllData = useCallback((recipeId: string)=>{\n        const promiseList: any[] = [getAllGroups(), getAllTags(), getAllItems(), getRecipeById(recipeId)];\n        Promise.all(promiseList)\n            .then((res: any) => {\n                if (res && res.length > 3) {\n                    setFormContent(\n                        <RecipeForm\n                            data={getDefaultData(res[3].data)}  \n                            groupDropdownList={res[0].data}\n                            tagDropdownList={res[1].data}\n                            itemDropdownList={res[2].data}\n                            onSubmit={handleFormSubmit}/>\n                    );\n                }\n            })\n            .catch((err: any) => console.log('Error fetching data: ', err))\n            .finally(()=> {setLoading(false); setTitle(`Update Recipe`)});\n    },[]);\n\n    // event handlers\n    const handleFormSubmit = (data: IRecipe) => {\n        setLoading(true);\n        // console.log('Recipe form to update is: ', data);\n        const group = data.group._id;\n        const tags = data.tags?.map((item: any) => item._id);\n        const items = data.items?.map((item: any) => item._id);\n        updateRecipeById( id, {\n            title: data.title,\n\t        link: data.link,\n\t        isPrivate: data.isPrivate,\n\t        content: data.content,\n\t        html: data.html,\n\t        group: group,\n\t        tags: tags,\n\t        items: items,\n\t        timers: []\n        })\n        .then((res: any) => {\n            enqueueSnackbar(`Recipe Form Updated!`, {variant: 'info', action: okActionButton });\n            dashboardDispatch ({\n                type: DASHBOARD_ROUTES.MY_RECIPES\n            });\n        })\n        .catch((err: any) => {\n            setLoading(false);\n            setTitle(`Update Recipe`);\n            console.log(`Error updating recipe..`, err);\n            enqueueSnackbar(`Error updating Recipe!`, \n                {variant: 'error', action: okActionButton });\n        });\n    };\n\n    useEffect(()=>{\n        // console.log('Recipe id to update is: ', id);\n        fetchAllData(id);\n    },[]);\n\n    return <React.Fragment>\n        <Grid className={classes.container} container spacing={1}>\n            <Typography variant=\"h5\" component=\"h2\">{title}</Typography>\n            <LinearLoader display={isLoading}/>\n                {formContent}\n        </Grid>\n        </React.Fragment>;\n};\n\nexport default RecipeUpdateView;","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        marginTop: '5px',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexGrow: 1,\n        paddingBottom: '50px'\n    },\n    rowCenter: {\n        width: '100%',\n        padding: 5,\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        width: '90%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    tabContent: {\n        width: '60%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));","import { CssBaseline, Grid, Typography } from '@material-ui/core';\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { searchByText } from '../../../common/async/AsyncCalls';\nimport EmptySearchCard from '../../../components/card/404/EmptySearchCard';\nimport { ISearch } from '../../../components/search/search-interface';\nimport SearchCard from '../../../components/search/SearchCard';\nimport { DASHBOARD_ROUTES, useDashboardRouteDispatch } from '../../../layouts/dashboard/router/DashboardRouterContext';\nimport GroupListSkeleton from '../../groups/loading/GroupListSkeleton';\nimport SimpleRecipeCard from '../card/SimpleRecipeCard';\n// custom\nimport { useStyles } from './recipe-search.styles';\n\nconst RecipeSearchView: FunctionComponent = (props): JSX.Element => {\n    const classes = useStyles();\n    const dispatchDashboard: any = useDashboardRouteDispatch();\n    const getInitialContent = (): JSX.Element => {\n        return <div className={classes.rowCenter}>\n           <Typography>\n                    Search Recipes by their title or by their content.\n            </Typography>\n        </div>;\n    };\n    // states\n    const [recipeListContent, setRecipeListContent] = useState<JSX.Element>(getInitialContent());\n     // lifecycle methods\n     const defaultCardContent = (): JSX.Element => {\n        return <React.Fragment>\n            <GroupListSkeleton/>\n            <GroupListSkeleton/>\n            <GroupListSkeleton/>\n        </React.Fragment>;\n    };\n\n    // event handlers\n    const handleView = (id: string) => {\n        console.log('Card detail to see: ', id);\n        dispatchDashboard ({\n            type: DASHBOARD_ROUTES.PREVIEW_RECIPE,\n            payload: id\n        });\n    };\n\n    const handleRecipeSearch = (data: ISearch) => {\n        setRecipeListContent(defaultCardContent());\n        searchByText(data)\n        .then((res: any) => {\n            console.log('Search result is: ', res.data);\n            if (res.data.length > 0) {\n                const list: JSX.Element[] = res.data?.map((el: any, index:number) => <SimpleRecipeCard\n                    key={index}\n                    onView={handleView}\n                    id = {el._id}\n                    title = {el.title}\n                    link = {el.link}\n                    isPrivate = {el.isPrivate}\n                    content = {el.content}\n                    html = {el.html}\n                    group = {el.group}\n                    createdBy = {el.createdBy}\n                    tags = {el.tags}\n                    items = {el.items}\n                    timers = {el.timers}\n                    />\n                );\n                setRecipeListContent(<React.Fragment>\n                    {list}\n                </React.Fragment>);\n            } else {\n                setRecipeListContent(<EmptySearchCard type=\"search\" query={data.query}/>);\n            }\n        })\n        .catch((err: any) => {\n            console.log('Error fetching: ', err);\n            setRecipeListContent(<EmptySearchCard type=\"search\" query={data.query}/>);\n        });\n    };\n\n    const handleSearchReset = () => {\n        setRecipeListContent (getInitialContent());\n    };\n\n    return <Grid container spacing={1} className={classes.rowCenter}>\n        <SearchCard table=\"recipes\" onSearch={handleRecipeSearch} onReset={handleSearchReset}/>\n        {recipeListContent}\n    </Grid>\n};\n\nexport default RecipeSearchView;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        marginTop: '5px',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexGrow: 1,\n        padding: 10,\n        paddingBottom: '50px'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        width: '90%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    tabContent: {\n        width: '60%',\n        marginTop: '30px',\n        alignSelf: 'center'\n    },\n    paper: {\n        padding: theme.spacing(6),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n}));","import React, { FunctionComponent } from \"react\";\n// material\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ViewIcon from '@material-ui/icons/DesktopWindows';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {useSnackbar} from \"notistack\";\nimport Button from \"@material-ui/core/Button\";\n// custom\nimport {IRecipe} from \"../common/recipe-interfaces\";\nimport SimpleBadge from \"../../../components/badges/simple/SimpleBadge\";\nimport { getSubText } from \"../../../common/util/HelperFunctions\";\nimport { DASHBOARD_ROUTES, useDashboardRouteDispatch } from \"../../../layouts/dashboard/router/DashboardRouterContext\";\nimport SmallBadge from \"../../../components/badges/simple/SmallBadge\";\n\ninterface IMyRecipeCardProps extends IRecipe {\n    onEdit: (data: IRecipe) => void;\n    onDelete: (id: string) => void;\n}\n\n//styles\nexport const useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    row: {\n        width: '100%',\n        display: 'flex',\n        '&>div': {\n            margin: 5\n        },\n        '&>div:nth-child(1)': {\n            marginLeft: 0\n        }\n    },\n    rowSeparate: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: 10\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    chip: {\n        margin: theme.spacing(1),\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    smallText: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 12,\n        color: theme.palette.primary.dark\n    },\n    action: {\n        display: 'flex',\n        // border: '1px solid red',\n        justifyContent: 'flex-end'\n    },\n    fab: {\n        margin: '0 10px'\n    }\n}));\n\nconst MyRecipeCard: FunctionComponent<IMyRecipeCardProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const dashboardDispatch: any = useDashboardRouteDispatch();\n    const { title, link, isPrivate, content, html, group,  onEdit, onDelete } = props;\n    const id = props.id? props.id: '';\n    const tags: any[] = props.tags? props.tags : [];\n    const items: any[] = props.items ? props.items : [];\n    const { enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    // add multiple actions to one snackbar\n    const action = (key: number) => (\n        <React.Fragment>\n            <Button onClick={() =>{\n                closeSnackbar(key);\n                onDelete(id);\n            }}>{'Yes'}</Button>\n            <Button onClick={() => { closeSnackbar(key); }}>{'No'}</Button>\n        </React.Fragment>\n    );\n\n    // event handlers\n    const handleEdit = () => {\n        onEdit({id, title, link, isPrivate, content, html, group, tags, items });\n    };\n\n    const handleView = () => {\n        dashboardDispatch ({\n            type: DASHBOARD_ROUTES.PREVIEW_RECIPE,\n            payload: id\n        });\n    };\n\n    const handleDelete = () => {\n        enqueueSnackbar(`Are you sure you want to delete this group?`, {variant: 'warning', action});\n    };\n\n    const tagContent = tags.length > 0 && tags.map((item: any, index: number) => <SimpleBadge key={index} name={item.name} description={item.description} />);\n\n    const groupBadge = group && group.title && <SmallBadge name={group.title} description={group.description}/>;\n    const privacyBadge = <SmallBadge name={isPrivate ? 'private' : 'public'} description={isPrivate ? 'This recipe is private' : 'This recipe is public'}/>;\n\n    return  <Grid item xs={12} md={4}>\n        <Card className={classes.card}>\n            <CardContent className={classes.cardContent}>\n                <Typography variant=\"h5\" component=\"h2\">{title}</Typography>\n                <Typography className={classes.pos} component=\"p\">\n                    {getSubText(props.content)}\n                </Typography>\n                <div className={classes.rowSeparate}>\n                    {groupBadge}\n                    {privacyBadge}\n                </div>\n                <div className={classes.row}>\n                {tagContent}\n                </div>\n            </CardContent>\n            <CardActions className={classes.action}>\n                <Fab\n                    className={classes.fab}\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Update\"\n                    onClick={handleView}>\n                    <ViewIcon />\n                </Fab>\n                <Fab\n                    className={classes.fab}\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Update\"\n                    onClick={handleEdit}>\n                    <EditIcon />\n                </Fab>\n                <Fab\n                    className={classes.fab}\n                    size=\"small\"\n                    aria-label=\"Delete\"\n                    onClick={handleDelete}>\n                    <DeleteIcon />\n                </Fab>\n            </CardActions>\n        </Card>\n    </Grid>\n}\n\nexport default MyRecipeCard;","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { CssBaseline, Grid, Typography } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\n// custom\nimport { IAppContextState, useGlobalState } from '../../../common/context/AppContext';\nimport EmptySearchCard from '../../../components/card/404/EmptySearchCard';\nimport CloseActionButton from '../../../components/notifications/CloseActionButton';\nimport { ISearch } from '../../../components/search/search-interface';\nimport { useStyles } from './my-recipe.view.styles';\nimport SearchCard from '../../../components/search/SearchCard';\nimport { DASHBOARD_ROUTES, useDashboardRouteDispatch } from '../../../layouts/dashboard/router/DashboardRouterContext';\nimport GroupListSkeleton from '../../groups/loading/GroupListSkeleton';\nimport MyRecipeCard from '../card/MyRecipeCard';\nimport { IRecipe } from '../common/recipe-interfaces';\nimport { deleteRecipeById, getAllRecipes, getAllRecipesByUserId, searchByText } from '../../../common/async/AsyncCalls';\n\n\nconst MyRecipeListView: FunctionComponent = (props): JSX.Element => {\n    // classes\n    const classes = useStyles();\n    const { enqueueSnackbar} = useSnackbar();\n    const dashboardDispatch: any =  useDashboardRouteDispatch();\n    const appContext: IAppContextState = useGlobalState();\n    const dashboardRouteDispatch: any = useDashboardRouteDispatch();\n    // lifecycle methods\n    const defaultCardContent = (): JSX.Element => {\n        return <React.Fragment>\n            <GroupListSkeleton/>\n            <GroupListSkeleton/>\n            <GroupListSkeleton/>\n        </React.Fragment>;\n    };\n    // notificationBox action - OK\n    const okActionButton = (key:number) => (\n        <CloseActionButton keyObj={key} />\n    );\n\n    // states\n    const [recipeListContent, setRecipeListContent] = useState<JSX.Element>(defaultCardContent());\n\n    // lifecycle methods\n    const filterByUserProfile = useCallback((list: any)=>{\n        const userProfile = appContext.profile;\n        console.log('User Profile is: ', userProfile);\n        if (userProfile.role === 'admin') return list;\n        else if (list.length > 0) {\n            return list.filter((item: any) => item.createdBy._id === userProfile._id);\n        } else {\n            return [];\n        }\n    },[]);\n\n    const fetchRecipes = useCallback(()=>{\n        setRecipeListContent(defaultCardContent());\n        let asyncFetchCall:()=>Promise<any> = getAllRecipesByUserId;\n        const userProfile = appContext.profile;\n        if (!userProfile) {\n            dashboardRouteDispatch ({\n                type: DASHBOARD_ROUTES.WELCOME\n            });\n        } else if (userProfile.role === 'admin') {\n            asyncFetchCall = getAllRecipes;\n        }\n        asyncFetchCall()\n            .then((res: any) => {\n                // console.log('Response is: ', res.data);\n                if (res.data.length > 0) {\n                    const sortedList = res.data?.sort((a: any, b: any) => {\n                        const date1 = new Date(a?.created);\n                        const date2 = new Date(b?.created);\n                        return date2.getTime() - date1.getTime();\n                    });\n                    const list: JSX.Element[] = sortedList?.map((recipe: any, index:number) => <MyRecipeCard\n                        key={index}\n                        id = {recipe._id}\n                        title = {recipe.title}\n                        link = {recipe.link}\n\t                    isPrivate = {recipe.isPrivate}\n\t                    content = {recipe.content}\n\t                    html = {recipe.html}\n\t                    group = {recipe.group}\n\t                    tags = {recipe.tags}\n\t                    items = {recipe.items}\n                        timers = {recipe.timers}\n                        onEdit = {handleRecipeItemEdit}\n                        onDelete = {handleRecipeItemDelete}\n                        />);\n                    setRecipeListContent(<React.Fragment>{list}</React.Fragment>);\n                } else {\n                    setRecipeListContent(<EmptySearchCard type=\"empty\"/>);\n                }\n            })\n            .catch((err: any) => console.log('error fetching recipes: ', err));\n    },[]);\n    \n    const handleRecipeItemEdit = (data: IRecipe) => {\n        // console.log('Recipe to edit: ', data);\n        dashboardDispatch ({\n            type: DASHBOARD_ROUTES.UPDATE_RECIPES,\n            payload: data.id\n        });\n    };\n\n    const handleRecipeItemDelete = (id: string) => {\n        setRecipeListContent(defaultCardContent);\n        deleteRecipeById(id)\n            .then((res: any) => {\n                fetchRecipes();\n                enqueueSnackbar(`Successfully deleted recipe...`,\n                {variant: 'info', action: okActionButton });\n            })\n            .catch((err: any) => {\n                console.log('Error deleting recipe: ', err);\n                enqueueSnackbar(`Error deleting Group record...`,\n                {variant: 'error', action: okActionButton });\n            });\n    };\n\n    // event handlers\n    const handleRecipeSearch = (data: ISearch) => {\n        setRecipeListContent(defaultCardContent());\n        searchByText(data)\n            .then((res: any) => {\n                // console.log('Search Result is: ', filterByUserProfile(res.data));\n                const result = filterByUserProfile(res.data);\n                if (result.length > 0) {\n                    const sortedList = result.sort((a: any, b: any) => {\n                        const date1 = new Date(a?.created);\n                        const date2 = new Date(b?.created);\n                        return date2.getTime() - date1.getTime();\n                    });\n                    const list: JSX.Element[] = sortedList.map((recipe: any, index:number) => <MyRecipeCard\n                    key={index}\n                    id = {recipe._id}\n                    title = {recipe.title}\n                    link = {recipe.link}\n                    isPrivate = {recipe.isPrivate}\n                    content = {recipe.content}\n                    html = {recipe.html}\n                    group = {recipe.group}\n                    tags = {recipe.tags}\n                    items = {recipe.items}\n                    timers = {recipe.timers}\n                    onEdit = {handleRecipeItemEdit}\n                    onDelete = {handleRecipeItemDelete}\n                    />);\n                setRecipeListContent(<React.Fragment>{list}</React.Fragment>);\n            } else {\n                setRecipeListContent(<EmptySearchCard type=\"empty\"/>);\n            }\n            });\n    };\n\n    const handleRecipeReset = () => {\n        fetchRecipes();\n    };\n\n    useEffect(()=>{\n        fetchRecipes();\n    },[]);\n\n    return <React.Fragment>\n        <div className = {classes.root}>\n            <CssBaseline />\n        <Grid container spacing={1}>\n            <Typography  variant=\"h5\" component=\"h2\">My Recipes</Typography>\n            <SearchCard table=\"recipes\" onSearch={handleRecipeSearch} onReset={handleRecipeReset}/>\n            {recipeListContent}\n        </Grid>\n        </div>\n    </React.Fragment>;\n};\n\nexport default MyRecipeListView;","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    row: {\n        margin: '10px 0px',\n        width: '100%'\n    },\n    rowSeparate: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 175,\n    },\n    cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        flexGrow: 1\n    },\n    rowItems: {\n        padding: 5,\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        '&>div': {\n            margin: 5\n        },\n        '&>div:nth-child(1)': {\n            marginLeft: 0\n        }\n    },\n    htmlContent: {\n        width: '100%'\n    }\n}));","import React, { FunctionComponent, useState } from 'react';\n// material\nimport { Button, Dialog, DialogContent, DialogTitle, Divider, Fab, IconButton, InputBase, makeStyles, Paper, Typography } from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CopyIcon from '@material-ui/icons/FileCopy';\n\ninterface IShareButtonProps {\n    link: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      marginBottom: 20,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    highlight: {\n        color: theme.palette.secondary.main\n    }\n}));\n\nconst ShareButton: FunctionComponent<IShareButtonProps> = (props): JSX.Element => {\n    const { link } = props;\n    const classes = useStyles();\n    // states\n    const [copyText, setCopyText] = useState<string>('');\n    const [isOpen, toggleOpen] = useState<boolean>(false);\n    // event handlers\n    const handleCopy = () => {\n        navigator.clipboard.writeText(`${link}`).then(()=>{\n            /* clipboard successfully set */\n            setCopyText('Copied to clipboard !!');\n        });\n    };\n\n    return <React.Fragment>\n        <Dialog\n            open={isOpen}\n            onClose={() => toggleOpen((prev: boolean) => !prev)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\">{\"Share link\"}</DialogTitle>\n            <DialogContent>\n                <Typography variant=\"body1\" component=\"p\" paragraph>\n                    <span className={classes.highlight}>To share, copy the link from the below field.</span><br/>\n                    <small><em>If you are using an Android phone / on Chrome -</em></small> <br/>\n                    <small><em>Click on copy-to-clipboard icon</em></small>\n                </Typography>\n                <Paper component=\"form\" className={classes.root}>\n                    <InputBase fullWidth className={classes.input} defaultValue={link}/>      \n                    <Divider className={classes.divider} orientation=\"vertical\" />\n                    <IconButton onClick={handleCopy} color=\"secondary\" className={classes.iconButton} aria-label=\"copy-to-clipboard\">\n                        <CopyIcon />\n                    </IconButton>\n                </Paper>\n                <p className={classes.highlight}>{copyText}</p>\n            </DialogContent>\n        </Dialog>\n        <IconButton\n            color=\"secondary\"\n            aria-label=\"share\"\n            onClick={() => toggleOpen((prev: boolean) => !prev)}>\n            <ShareIcon />\n        </IconButton>\n    </React.Fragment>;\n}\n\nexport default ShareButton;","import React, { FunctionComponent } from 'react';\nimport { Avatar, Chip, makeStyles, Theme, Tooltip } from '@material-ui/core';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport TheatersIcon from '@material-ui/icons/Theaters';\n\ninterface IYoutubeBadgeProps {\n    link: string;\n}\n\n//styles\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    }\n}));\n\nexport const useStyles = makeStyles(theme => ({\n    content: {\n        width: '100%'\n    },\n    pos: {\n        textAlign: 'left',\n        marginBottom: 12,\n        fontSize: 18\n    },\n    checkBoxText: {\n        position: 'relative',\n        top: '10px'\n    },\n    checkBoxContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n    }\n}));\n\nconst YoutubeBadge: FunctionComponent<IYoutubeBadgeProps> = (props): JSX.Element => {\n    const { link } = props;\n    // styles\n    const classes = useStyles();\n    const toolTipClasses = useStylesBootstrap();\n    \n    return <React.Fragment>\n        <Tooltip\n            title=\"Watch on Youtube\"\n            arrow\n            placement=\"top\"\n            classes={toolTipClasses}>\n            <Chip\n                icon={<YouTubeIcon/>}\n                label=\"Youtube link\"\n                clickable\n                onClick={()=>{window.open(link);}}\n                color=\"secondary\"/>\n        </Tooltip>\n    </React.Fragment>;\n}\n\nexport default YoutubeBadge;","import React, { FunctionComponent } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ItemBadgeModal from '../badges/item-badge/ItemBadgeModal';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    column: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    row: {\n        margin: '5px 0',\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        '&>div': {\n          margin: 5\n        }\n    },\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0,\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\ninterface IRecipeAccordianProps {\n    date: string;\n    author: string;\n    items: any[] | null;\n}\n\nconst RecipeAccordian: FunctionComponent<IRecipeAccordianProps> = (props):JSX.Element => {\n    const { date, author, items } = props;\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState<string | false>(false);\n\n  // event handlers\n  const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const parseDateString = (data: string) => {\n      const currDate: Date = new Date(data);\n      return `${currDate.getDate()}/${currDate.getMonth()+1}/${currDate.getFullYear()}`;\n  }\n\n  const itemsContent = items && items.length > 0 && items.map((item: any, index: number) => <ItemBadgeModal key={index} name={item.name} description={item.description} html={item.html}/>);\n  const itemDiv = itemsContent && <div className={classes.row}>\n                    <Typography className={classes.root}>\n                      <strong>Key Ingredients:</strong>\n                    </Typography>\n                    {itemsContent}\n                  </div>;\n\n  return (\n    <div className={classes.root}>\n      <Accordion expanded={expanded === 'recipePanel'} onChange={handleChange('recipePanel')}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"recipePanelbh-content\"\n          id=\"recipePanelbh-header\">\n          <Typography className={classes.heading}>Additional Info</Typography>          \n        </AccordionSummary>\n        <AccordionDetails className={classes.column}>\n          <Typography>\n            <strong>Created by: </strong> {author}\n          </Typography>\n          <Typography className={classes.root}>\n            <strong>Created on: </strong> {parseDateString(date)}\n          </Typography>\n          {itemDiv}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default RecipeAccordian;","import React, { FunctionComponent, useEffect, useCallback } from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n// custom\nimport { IRecipe } from '../common/recipe-interfaces';\nimport { useStyles } from './recipe-detail-card.styles';\nimport SimpleBadge from '../../../components/badges/simple/SimpleBadge';\nimport ShareButton from '../../../components/buttons/share/ShareButton';\nimport SmallBadge from '../../../components/badges/simple/SmallBadge';\nimport YoutubeBadge from '../../../components/badges/media/YoutubeBadge';\nimport RecipeAccordian from '../../../components/accordians/RecipeAccordian';\n\ninterface IRecipeDetailCardProps {\n    data: IRecipe;\n}\n\nconst RecipeDetailCard: FunctionComponent<IRecipeDetailCardProps> = (props): JSX.Element => {\n    const { data } = props;\n    const { title, link, html, group } = data;\n    const date = data.created ? data.created : '';\n    const author = data.createdBy ? data.createdBy : null;\n    const tags = data.tags? data.tags : [];\n    const items = data.items ? data.items : [];\n    const timers = data.timers ? data.timers : null;\n    const classes = useStyles();\n\n    // event handlers\n    const createMarkup = () => {\n        return {__html: html};\n    };\n\n    const tagContent = tags.length > 0 && tags.map((item: any, index: number) => <SimpleBadge \n        key={index} name={item.name} description={item.description} />);\n\n    \n    const groupCard = group.title && <SmallBadge name={group.title} description={group.description} color={'primary'}/>;\n    const youtubeButton = link !== '' && <YoutubeBadge link={link}/>\n\n    // useEffect(()=>{console.log('Author details: ', data)});\n\n    return <React.Fragment>\n        <Card className={classes.card}>\n            <CardContent className={classes.cardContent}>\n                <div className={classes.rowSeparate}>\n                    <Typography variant=\"h5\" component=\"h2\">{title.toUpperCase()}</Typography>\n                    <ShareButton link={window.location.href}/>\n                </div>\n                <div className={classes.rowSeparate}>\n                    {groupCard}\n                    {youtubeButton}\n                </div>\n                <div className={classes.rowItems}>\n                    {tagContent}\n                </div>\n                <div className={classes.row}>\n                    {author && items && <RecipeAccordian date={date} author={author.name} items={items}/>}\n                </div>\n                <div className={classes.htmlContent} dangerouslySetInnerHTML={createMarkup()}></div>\n            </CardContent>\n        </Card>\n    </React.Fragment>;\n};\n\nexport default RecipeDetailCard;\n\n","import React, { FunctionComponent, useEffect, useCallback, useState } from 'react';\n// material\nimport { Grid, makeStyles } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\n// custom\nimport RecipeFormSkeleton from '../loading/RecipeFormSkeleton';\nimport { getRecipeById } from '../../../common/async/AsyncCalls';\nimport RecipeDetailCard from '../card/RecipeDetailCard';\nimport { getSubText } from '../../../common/util/HelperFunctions';\nimport EmptySearchCard from '../../../components/card/404/EmptySearchCard';\n// styles\nconst useStyles = makeStyles(theme => ({\n    container: {\n        width: '95%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}));\n\nconst RecipeDetailView: FunctionComponent = (props): JSX.Element => {\n    const { id } = useParams();\n    const classes = useStyles();\n    // states\n    const [formContent, setFormContent] = useState<JSX.Element>(<RecipeFormSkeleton/>);\n    // lifecycle methods\n    const fetchRecipeDetails = useCallback((id: string) => {\n        getRecipeById(id)\n            .then((res: any) => {\n                if (res.data.length > 0) {\n                    setFormContent(<RecipeDetailCard data={res.data[0]}/>);\n                }\n            })\n            .catch((err: any) => {\n                console.log('Error retrieving recipe details: ', err);\n                setFormContent(<EmptySearchCard type=\"error\"/>);\n            });\n    },[]);\n    // component did mount\n    useEffect(()=>{\n        // console.log('Recipe id to preview: ', id);\n        fetchRecipeDetails(id);\n    },[]);\n    return <React.Fragment>\n        <Grid className={classes.container} container spacing={1}>\n            {formContent}\n        </Grid>\n    </React.Fragment>;\n};\n\nexport default RecipeDetailView;","import React, { FunctionComponent } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n// custom\nimport HomeView from \"../../../views/home/Home.view\";\nimport GroupView from \"../../../views/groups/Group.view\";\nimport {DashboardRouterContextProvider} from \"./DashboardRouterContext\";\nimport TagView from \"../../../views/tags/Tag.view\";\nimport ItemView from \"../../../views/items/Item.view\";\nimport RecipeAddView from '../../../views/recipes/add/RecipeAdd.view';\nimport RecipeListView from '../../../views/recipes/list/RecipeList.view';\nimport RecipeUpdateView from '../../../views/recipes/edit/RecipeUpdate.view';\nimport RecipeSearchView from '../../../views/recipes/search/RecipeSearch.view';\nimport MyRecipeListView from '../../../views/recipes/profile/MyRecipe.view';\nimport RecipeDetailView from '../../../views/recipes/detail/RecipeDetail.view';\n\nconst DashboardRouterApp: FunctionComponent = () => {\n    return (\n        <DashboardRouterContextProvider>\n            <Router>\n                <Switch>\n                    <Route strict path=\"/app/groups\" component={GroupView}/>\n                    <Route strict path=\"/app/tags\" component={TagView}/>\n                    <Route strict path=\"/app/items\" component={ItemView}/>\n                    <Route strict path=\"/app/recipes/add\" component={RecipeAddView}/>\n                    <Route strict path=\"/app/recipes/search\" component={RecipeSearchView}/>\n                    <Route strict path=\"/app/recipes/profile\" component={MyRecipeListView}/>\n                    <Route strict path=\"/app/recipes/list/:id\" component={RecipeListView}/>\n                    <Route strict path=\"/app/recipes/update/:id\" component={RecipeUpdateView}/>\n                    <Route strict path=\"/app/recipes/detail/:id\" component={RecipeDetailView}/>\n                    <Route path=\"/app/\" component={HomeView}/>\n                </Switch>\n            </Router>\n        </DashboardRouterContextProvider>\n    );\n};\n\nexport default DashboardRouterApp;","import React, { useState, useEffect, useCallback, FunctionComponent} from 'react';\nimport clsx from 'clsx';\n// material\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// custom\nimport Sidebar from './../../components/sidebar/Sidebar';\nimport Header from './../../components/header/Header';\nimport Footer from './../../components/footer/Footer';\nimport { useGlobalDispatch, useGlobalState } from './../../common/context/AppContext';\nimport { useStyles } from './dashboard-style';\nimport { getUserDetails } from '../../common/async/AsyncCalls';\nimport { CONTEXT_ACTION_TYPE } from '../../common/context/AppContext';\nimport DashboardRouterApp from \"./router/DashboardRouter\";\n\n\n\nconst DashboardLayout:FunctionComponent = (props):JSX.Element => {        \n    const appDispatch: any = useGlobalDispatch();\n    //state\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n\n    // lifecycle methods\n    const fetchUserDetails = useCallback(()=>{\n        return getUserDetails()\n            .then((res: any) => appDispatch({\n                type: CONTEXT_ACTION_TYPE.SET_PROFILE_DATA,\n                payload: res.data\n            }));            \n    },[]);\n    \n    // events\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    \n    \n    // componentLoaded\n    useEffect(()=>{\n        fetchUserDetails();\n    },[]);\n\n    return (        \n            <div className={classes.root}>\n                <CssBaseline />\n                <Header open={open} handleDrawerOpen={handleDrawerOpen} />\n                <Sidebar open={open} handleDrawerClose={handleDrawerClose} />\n                <main className={clsx(classes.content, { [classes.contentShift]: open })}>                    \n                    <DashboardRouterApp/>\n                </main>\n                 <Footer open={open} handleDrawerOpen={handleDrawerOpen}/>\n            </div>\n    );\n}\n\nexport default DashboardLayout;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      // border: '1px solid red',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '99%',\n      height: '90%'\n    },\n    imageIcon: {\n      borderRadius: 10,\n      width: '150px',\n      marginBottom: 10,\n      boxShadow: theme.shadows[3]\n    },\n    title: {\n      marginBottom: 10      \n    },\n    content: {\n      marginBottom: 10,\n      fontSize: '.9rem'      \n    },\n    paper: {\n      position: 'relative',\n      opacity: 0,\n      top: 200,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minWidth: 270,\n      margin: 20,\n      overflow: 'hidden',\n    },\n    socialBtn: {\n      margin: '10px 0',\n      padding: `10px 20px`\n    },\n    fontIcon: {\n      fontSize: 30,\n    },\n    contentWrapper: {\n      // border: '1px solid green',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: '30px 16px',\n    },\n    footer: {\n      justifySelf: 'flex-end',\n      padding: 20,\n      maxWidth: 275,\n      marginBottom: 10,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    [theme.breakpoints.between(270,414)]: {\n      imageIcon: {\n        borderRadius: 10,\n        width: '75px',\n        marginBottom: 0,\n        boxShadow: theme.shadows[3]\n      },\n      footer: {\n        justifySelf: 'flex-end',\n        padding: 0,\n        maxWidth: 275\n      },\n    },\n  }));","import React, { FunctionComponent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\nfooterText: {\n    fontSize: '0.8rem',\n    '&>a': {\n        color: theme.palette.secondary.main,\n        textDecoration: 'none',\n        margin: 10,\n        '&:hover': {\n            textDecoration: 'underline'\n        }\n    }\n}\n}));\n\ninterface ISimpleLinkButtonProps {\n    link: string;\n}\n\nconst SimpleLinkButton: FunctionComponent<ISimpleLinkButtonProps> = (props):JSX.Element=>{\n  const classes = useStyles();\n  const { link, children } = props;\n  return (\n    <React.Fragment>\n        <Typography className={classes.footerText} variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <RouterLink to={link}>{children}</RouterLink>\n        </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default SimpleLinkButton;","import React, { FunctionComponent, useContext, useState, useEffect, useCallback, useRef } from 'react';\nimport gsap, { CSSPlugin, TimelineLite, Back } from 'gsap';\n// material\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n// custom\nimport {useStyles} from './about.style';\nimport logo from './../../assets/img/logo.png';\n// context\nimport {AppStateContext, CONTEXT_ACTION_TYPE, useGlobalDispatch} from '../../common/context/AppContext';\n// notification\nimport { SimpleNotification, NOTIFICATION_TYPE } from '../../common/snackbar/SnackbarHelper';\nimport SimpleLinkButton from '../../components/buttons/links/SimpleLinkButton';\n\n\n\n// Force CSSPlugin to not get dropped during build\ngsap.registerPlugin(CSSPlugin);\n\nconst AboutView : FunctionComponent = () => {\n    const classes = useStyles();\n    const appContext = useContext(AppStateContext);\n    const appDispatch: any = useGlobalDispatch();\n    //refs    \n    let aboutRef = useRef<HTMLButtonElement>(document.createElement(\"button\"));\n    let loginBoxDom = useRef<HTMLDivElement>(document.createElement(\"div\"));\n\n    const animateIn = useCallback(()=>{\n        const t1 = new TimelineLite();\n        // reset mode to always white\n        appDispatch ({\n            type: CONTEXT_ACTION_TYPE.THEME_TOGGLE,\n            payload: false\n        });\n        setTimeout(()=>{\n            console.log('Login Box Reference is: ', loginBoxDom);\n            t1.to(loginBoxDom.current, 1, {top: 0, opacity: 1, ease: Back.easeOut.config(1)});\n            t1.play();\n        },1000);\n    },[]);\n\n\n    const goback = () => {\n        window.location.href = '/login';\n    };\n\n    //componentDidMount\n    useEffect(()=>{\n        animateIn();\n        aboutRef.current.focus();\n    },[]);\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={1} className={classes.root} alignItems=\"center\">\n                <Paper className={classes.paper} ref={loginBoxDom}>\n                    <div className={classes.contentWrapper}>\n                        <img src={logo} className={classes.imageIcon} alt=\"logo\"/>                         \n                        <Typography align=\"center\" className={classes.title}>\n                            {`${appContext.title} v${appContext.version}`}\n                        </Typography>      \n                        <Typography color=\"textSecondary\" align=\"center\" className={classes.content}>\n                            This is a simple web Application <br/>\n                            in which you can study &amp; store <br/>\n                            bible study notes, scriptures &amp; messages.\n                        </Typography>                      \n                        <Typography color=\"textSecondary\" align=\"center\" className={classes.content}>\n                            {`v${appContext.version}`} now supports Social Login, <br/>\n                            Dark &amp; Light Themes, <br/>\n                            Ability to fetch scriptures from <br/>\n                            the Bible API (NKJV)\n                        </Typography>\n                        <Typography color=\"textSecondary\" align=\"center\" className={classes.content}>\n                            If you think this recipe app was useful, <br/>\n                            consider buying me treat <br/>\n                            (or just drop a vote of support) <br/>\n                            on the following Patreon Page <br/>\n                            <a rel=\"noreferrer noopener\" href=\"https://www.patreon.com/pramodPanta\" target=\"_blank\">Click here</a>\n                        </Typography>\n                    </div>\n                    <footer className={classes.footer}>\n                        <SimpleLinkButton link=\"/login\">\n                            Login to application\n                        </SimpleLinkButton>\n                        <SimpleLinkButton link=\"/\">\n                            Home\n                        </SimpleLinkButton>\n                    </footer>\n                </Paper>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default AboutView;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      // border: '1px solid red',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '99%',\n      height: '90%'\n    },\n    imageIcon: {\n      borderRadius: 10,\n      width: '150px',\n      marginBottom: 10,\n      boxShadow: theme.shadows[3]\n    },\n    title: {\n      marginBottom: 30\n    },\n    paper: {\n      position: 'relative',\n      opacity: 0,\n      top: 200,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minWidth: 270,\n      margin: 20,\n      overflow: 'hidden',\n    },\n    socialBtn: {\n      margin: '10px 0',\n      padding: `10px 20px`\n    },\n    fontIcon: {\n      fontSize: 30,\n    },\n    contentWrapper: {\n      // border: '1px solid green',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: '40px 16px',\n    },\n    footer: {\n      justifySelf: 'flex-end',\n      display: 'flex',\n      justifyContent: 'space-between',\n      padding: 20,\n      maxWidth: 275,\n      marginBottom: 15\n    },\n    footerText: {\n      fontSize: '0.8rem',\n      '&>a': {\n          color: theme.palette.secondary.main,\n          textDecoration: 'none',\n          '&:hover': {\n              textDecoration: 'underline'\n          }\n      }\n    },\n    [theme.breakpoints.between(270,414)]: {\n      imageIcon: {\n        borderRadius: 10,\n        width: '75px',\n        marginBottom: 0,\n        boxShadow: theme.shadows[3]\n      },\n      footer: {\n        justifySelf: 'flex-end',\n        padding: 0,\n        maxWidth: 275\n      },\n    },\n  }));","import React, { FunctionComponent, useContext, useState, useEffect, useCallback, useRef } from 'react';\nimport gsap, { CSSPlugin, TimelineLite, Back } from 'gsap';\nimport { FaGoogle } from 'react-icons/fa';\n// material\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n// custom\nimport {useStyles} from './login.style';\nimport logo from './../../assets/img/logo.png';\nimport { LinearLoader } from './../../components/loaders/linear-loader/LinearLoader';\n// context\nimport { RouterDispatchContext } from '../../router/context/RouterContext';\nimport {CONTEXT_ACTION_TYPE, IAppContextState, useGlobalState, useGlobalDispatch} from './../../common/context/AppContext';\n// notification\nimport SimpleLinkButton from '../../components/buttons/links/SimpleLinkButton';\n\n\n\n// Force CSSPlugin to not get dropped during build\ngsap.registerPlugin(CSSPlugin);\n\nconst LoginView : FunctionComponent = () => {\n    const classes = useStyles();\n    const appContext:IAppContextState = useGlobalState();\n    const appDispatch: any = useGlobalDispatch();\n    //states\n    const [isLoading, setLoading] = useState(false);\n    //refs    \n    let submitRef = useRef<HTMLButtonElement>(document.createElement(\"button\"));\n    let loginBoxDom = useRef<HTMLDivElement>(document.createElement(\"div\"));\n\n    const animateIn = useCallback(()=>{\n        const t1 = new TimelineLite();\n        // reset mode to always white\n        appDispatch ({\n            type: CONTEXT_ACTION_TYPE.THEME_TOGGLE,\n            payload: false\n        });\n        setTimeout(()=>{\n            console.log('Login Box Reference is: ', loginBoxDom);\n            t1.to(loginBoxDom.current, 1, {top: 0, opacity: 1, ease: Back.easeOut.config(1)});\n            t1.play();\n        },1000);\n    },[]);\n\n   \n\n    const authenticate = async (evt: any) => {\n        setLoading(true);\n        evt.preventDefault();\n        window.location.href = '/auth/google';\n    };\n\n    \n\n    //componentDidMount\n    useEffect(()=>{\n        animateIn();\n        submitRef.current.focus();\n    },[]);\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={1} className={classes.root} alignItems=\"center\">\n                <Paper className={classes.paper} ref={loginBoxDom}>\n                    <div className={classes.contentWrapper}>\n                        <img src={logo} className={classes.imageIcon} alt=\"logo\"/>\n                        <Typography color=\"textSecondary\" align=\"center\" className={classes.title}>\n                            {`${appContext.title} v${appContext.version}`}\n                        </Typography>\n                        <LinearLoader display={isLoading}/>                        \n                        <Button\n                            onClick={authenticate}\n                            fullWidth\n                            buttonRef={submitRef}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onKeyDown={authenticate}\n                            className={classes.socialBtn}>\n                            <FaGoogle/>&nbsp;&nbsp;Sign In with Google\n                        </Button>\n                    </div>\n                    <footer className={classes.footer}>\n                        <SimpleLinkButton link=\"/about\">\n                            About {appContext.title}\n                        </SimpleLinkButton>\n                        <Typography className={classes.footerText} variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                            <a href=\"/\">Home</a>\n                        </Typography>\n                    </footer>\n                </Paper>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default LoginView;","import React, { FunctionComponent } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport DashboardLayout from '../layouts/dashboard/DashboardLayout';\n// custom\nimport HomeView from \"../views/home/Home.view\";\nimport AboutView from \"../views/about/About.view\";\nimport LoginView from \"../views/login/Login.view\";\n\nconst RouterApp: FunctionComponent = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/app\" render={(props: any) => <DashboardLayout {...props}/>} />\n                <Route path=\"/login\" component={LoginView} />\n                <Route path=\"/about\" component={AboutView} />\n                <Redirect from=\"/\" to=\"/app\" />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default RouterApp;","import React, { FunctionComponent, useEffect, useState, useCallback } from 'react';\n// material\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { pink } from '@material-ui/core/colors';\nimport { SnackbarProvider } from 'notistack';\nimport { useThemeOptions } from './../common/theme/ThemeConfigProvider';\n\nimport RouterApp from '../router/RouterApp';\nimport { IAppContextState, useGlobalState } from '../common/context/AppContext';\n\nconst App: FunctionComponent = () => {    \n\n    return (\n        <MuiThemeProvider\n            theme = {useThemeOptions()}>\n            <SnackbarProvider maxSnack={3} anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}>\n                <div className=\"App\">\n                    <RouterApp />\n                </div>\n            </SnackbarProvider>\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n// custom\nimport { AppContextProvider } from \"./common/context/AppContext\";\nimport App from './app/App';\n// service-worker\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render (\n                <AppContextProvider>\n                    <App/>\n                </AppContextProvider>,\n                document.getElementById('root')\n);\n// console.log('Axios default base URL is: ', axios.defaults);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.75562895.png\";"],"sourceRoot":""}